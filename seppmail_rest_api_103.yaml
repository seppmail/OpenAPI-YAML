openapi: 3.0.3
info:
  title: SEPPmail API
  description: Manage your SEPPmail-Appliance with code
  termsOfService: 'https://api.seppmail.com'
  contact:
    name: API Support
    url: 'http://www.seppmail.de/support'
    email: support@seppmail.de
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
    x-comment: we have to fix the license
  version: 1.0.3
servers:
  - url: 'https://{server}:{port}/v1'
    description: internal development server
    variables:
      server:
        default: seppmail.domain.com
      port:
        default: '8445'
components:
  securitySchemes:
    apiToken:
      type: apiKey
      in: header
      name: X-SM-API-TOKEN
    apiSecret:
      type: apiKey
      in: header
      name: X-SM-API-SECRET
tags:
  - name: customer
    description: customer data related operations
  - name: filter / blwl
    description: filter black- and whitelisting related operations
  - name: filter / config
    description: filter config related operations
  - name: group
    description: group data related operations
  - name: info
    description: information related operations
  - name: mail system
    description: mail system related operations
  - name: mail system / managed domain
    description: managed domain related operations
  - name: mail system / disclaimer
    description: disclaimer related operations
  - name: mail system / template
    description: templates related operations
  - name: statistics
    description: statistics related operations
  - name: user
    description: user data related operations
  - name: webmail
    description: webmail related operations
security:
  - apiToken: []
    apiSecret: []
paths:
  /user:
    get:
      tags:
        - user
      summary: Get information about a locally existing user
      description: >-
        With this GET request you can get information about a locally existing
        user.
      operationId: user_get
      x-mojo-to: 'RestAPI::User#api_get'
      parameters:
        - name: customer
          in: query
          description: limit output to a specific customer
          allowEmptyValue: false
          required: false
          schema:
            type: string
            title: Customer name scheme
            pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
            example: CustomerName
          example: CustomerName
        - in: query
          name: list
          required: false
          schema:
            type: boolean
            default: false
          description: 'if true, return an array of names instead of detailed information'
        - name: uid
          in: query
          description: limit output to a specific UID
          allowEmptyValue: false
          required: false
          schema:
            type: string
            description: String representing the UID of an user
          example: admin
        - name: email
          in: query
          description: limit output to a specific e-Mail address
          allowEmptyValue: false
          required: false
          schema:
            type: string
            format: email
            example: john.doe@domain.com
          example: john.doe@domain.com
      responses:
        '200':
          description: A JSON object holding the information about users
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: Get users info object scheme
                    additionalProperties:
                      type: object
                      title: Get user info object
                      properties:
                        customer:
                          type: string
                          title: Customer name scheme
                          pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
                          example: CustomerName
                        email:
                          type: string
                          format: email
                          example: john.doe@domain.com
                        locked:
                          type: boolean
                        mayNotEncrypt:
                          type: boolean
                        mayNotSign:
                          type: boolean
                        mpkiSubjectPart:
                          type: string
                          title: MPKI static subject scheme
                          pattern: '^(?:(?<!\\)\/[^=]+=.*?(?<!\\)(?=\/))+(?:\/)$|^$'
                          example: /type0=value/
                        name:
                          type: string
                        notifications:
                          type: string
                          title: User notification scheme
                          enum:
                            - never
                            - always
                            - domain default
                          default: domain default
                        uid:
                          type: string
                    example:
                      john.doe@domain.com:
                        customer: CustomerName
                        email: john.doe@domain.com
                        locked: false
                        mayNotEncrypt: false
                        mayNotSign: true
                        mpkiSubjectPart: ''
                        name: John Doe
                        notifications: domain default
                        uid: john_doe
                  - type: array
                    items:
                      type: string
                      format: email
                      example: john.doe@domain.com
                    example:
                      - john.doe@domain.com
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    post:
      tags:
        - user
      summary: Add a new local user.
      description: Adds a new local user with the specified attributes
      operationId: user_add
      x-mojo-to: 'RestAPI::User#api_add'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Create user object scheme
              description: User object for initial creation
              required:
                - uid
                - email
                - name
              properties:
                uid:
                  type: string
                  example: user_uid
                email:
                  type: string
                  format: email
                  example: john.doe@domain.com
                name:
                  type: string
                  example: User Name
                password:
                  type: string
                  format: password
                  example: v3ryS3cUr3
                customer:
                  oneOf:
                    - type: string
                      title: Customer name scheme
                      pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
                      example: CustomerName
                    - type: string
                      minLength: 0
                      maxLength: 0
                      default: ''
                      description: An empty string
                mayNotEncrypt:
                  type: boolean
                  default: false
                mayNotSign:
                  type: boolean
                  default: false
                locked:
                  type: boolean
                  default: false
                notifications:
                  type: string
                  title: User notification scheme
                  enum:
                    - never
                    - always
                    - domain default
                  default: domain default
                mpkiSubjectPart:
                  type: string
                  title: MPKI static subject scheme
                  pattern: '^(?:(?<!\\)\/[^=]+=.*?(?<!\\)(?=\/))+(?:\/)$|^$'
                  example: /type0=value/
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/user/{email}':
    parameters:
      - name: email
        in: path
        description: limit output to a specific e-Mail address
        allowEmptyValue: false
        style: simple
        required: true
        x-mojo-placeholder: '#'
        schema:
          type: string
          format: email
          example: john.doe@domain.com
        example: john.doe@domain.com
    get:
      tags:
        - user
      summary: Get information about a locally existing user
      description: >-
        With this GET request you can get information about a locally existing
        user.
      operationId: user_email_get
      x-mojo-to:
        - 'RestAPI::User#api_get'
        - list: false
      parameters:
        - name: customer
          in: query
          description: limit output to a specific customer
          allowEmptyValue: false
          required: false
          schema:
            type: string
            title: Customer name scheme
            pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
            example: CustomerName
          example: CustomerName
      responses:
        '200':
          description: A JSON object holding the information about users
          content:
            application/json:
              schema:
                type: object
                title: Get users info object scheme
                additionalProperties:
                  type: object
                  title: Get user info object
                  properties:
                    customer:
                      type: string
                      title: Customer name scheme
                      pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
                      example: CustomerName
                    email:
                      type: string
                      format: email
                      example: john.doe@domain.com
                    locked:
                      type: boolean
                    mayNotEncrypt:
                      type: boolean
                    mayNotSign:
                      type: boolean
                    mpkiSubjectPart:
                      type: string
                      title: MPKI static subject scheme
                      pattern: '^(?:(?<!\\)\/[^=]+=.*?(?<!\\)(?=\/))+(?:\/)$|^$'
                      example: /type0=value/
                    name:
                      type: string
                    notifications:
                      type: string
                      title: User notification scheme
                      enum:
                        - never
                        - always
                        - domain default
                      default: domain default
                    uid:
                      type: string
                example:
                  john.doe@domain.com:
                    customer: CustomerName
                    email: john.doe@domain.com
                    locked: false
                    mayNotEncrypt: false
                    mayNotSign: true
                    mpkiSubjectPart: ''
                    name: John Doe
                    notifications: domain default
                    uid: john_doe
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    put:
      tags:
        - user
      summary: Modify a locally existing user
      description: >-
        With this PUT request you can change a locally existing user. Only
        specified values will be changed.
      operationId: user_email_modify
      x-mojo-to: 'RestAPI::User#api_modify'
      parameters:
        - name: customer
          in: query
          description: limit output to a specific customer
          allowEmptyValue: false
          required: false
          schema:
            type: string
            title: Customer name scheme
            pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
            example: CustomerName
          example: CustomerName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Modify user object scheme
              description: User object for changes
              properties:
                name:
                  type: string
                  example: User Name
                password:
                  type: string
                  format: password
                  example: v3ryS3cUr3
                customer:
                  type: string
                  title: Customer name scheme
                  pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
                  example: CustomerName
                mayNotEncrypt:
                  type: boolean
                  example: false
                mayNotSign:
                  type: boolean
                  example: true
                locked:
                  type: boolean
                  example: false
                notifications:
                  type: string
                  title: User notification scheme
                  enum:
                    - never
                    - always
                    - domain default
                  default: domain default
                mpkiSubjectPart:
                  type: string
                  title: MPKI static subject scheme
                  pattern: '^(?:(?<!\\)\/[^=]+=.*?(?<!\\)(?=\/))+(?:\/)$|^$'
                  example: /type0=value/
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    delete:
      tags:
        - user
      summary: Delete a locally existing user
      description: With this DELETE request you can delete a locally existing user.
      operationId: user_email_delete
      x-mojo-to: 'RestAPI::User#api_delete'
      parameters:
        - in: query
          name: keepKeys
          required: false
          schema:
            type: boolean
            default: false
          description: 'If true, the certificates and private keys will not be deleted'
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  /customer:
    get:
      tags:
        - customer
      summary: Get information about or a list of customers
      description: >-
        With this GET request you can get information about customers or a list
        of available customers.
      operationId: customer_get
      x-mojo-to: 'RestAPI::Customer#api_get'
      parameters:
        - in: query
          name: list
          required: false
          schema:
            type: boolean
            default: false
          description: 'if true, return an array of names instead of detailed information'
      responses:
        '200':
          description: An array with customer names
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: Get customer info object scheme
                    additionalProperties:
                      type: object
                      title: Get customer info object
                      properties:
                        adminEmail:
                          type: string
                          format: email
                          example: john.doe@domain.com
                        admins:
                          type: array
                          items:
                            type: string
                            format: email
                            example: john.doe@domain.com
                        comment:
                          type: string
                        creator:
                          type: string
                        defaultGINADomain:
                          type: string
                        deleteOldMessagesGracePeriod:
                          type: integer
                          minimum: 0
                          default: 0
                        deleteUnregistered:
                          type: integer
                          minimum: 0
                          default: 0
                        description:
                          type: string
                        mailRoutes:
                          type: array
                          items:
                            type: string
                        maximumEncryptionLicenses:
                          type: integer
                          minimum: 0
                        maximumLFTLicenses:
                          type: integer
                          minimum: 0
                        name:
                          type: string
                          title: Customer name scheme
                          pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
                          example: CustomerName
                        sendBackupToAdmin:
                          type: boolean
                          default: false
                    example:
                      Customer1:
                        adminEmail: foo.bar@chaos.int
                        admins:
                          - bar.foo@int.chaos
                        comment: ''
                        creator: 'Created by admin on Wed Jun 26 16:21:19 2019'
                        defaultGINADomain: ''
                        deleteOldMessagesGracePeriod: 0
                        deleteUnregistered: 0
                        description: Customer1
                        mailRoutes:
                          - int.chaos
                        maximumEncryptionLicenses: ''
                        maximumLFTLicenses: ''
                        name: Customer1
                        sendBackupToAdmin: false
                  - type: array
                    items:
                      type: string
                      title: Customer name scheme
                      pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
                      example: CustomerName
                    example:
                      - CustomerName
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    post:
      tags:
        - customer
      summary: Add a new customer
      description: With this POST request you can add a new customer.
      operationId: customer_add
      x-mojo-to: 'RestAPI::Customer#api_add'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Create customer object scheme
              description: Customer object for customer creation
              required:
                - name
              properties:
                adminEmail:
                  type: string
                  format: email
                  example: john.doe@domain.com
                  default: ''
                admins:
                  type: array
                  items:
                    type: string
                    format: email
                    example: john.doe@domain.com
                  default: []
                backupPassword:
                  type: string
                  format: password
                  example: v3ryS3cUr3
                  default: ''
                comment:
                  type: string
                  default: ''
                defaultGINADomain:
                  type: string
                  default: '[default]'
                deleteOldMessagesGracePeriod:
                  type: integer
                  minimum: 0
                  default: 0
                deleteUnregistered:
                  type: integer
                  minimum: 0
                  default: 0
                description:
                  type: string
                  default: ''
                mailRoutes:
                  type: array
                  items:
                    type: string
                  default: []
                maximumEncryptionLicenses:
                  type: integer
                  minimum: 0
                maximumLFTLicenses:
                  type: integer
                  minimum: 0
                name:
                  type: string
                  title: Customer name scheme
                  pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
                  example: CustomerName
                sendBackupToAdmin:
                  type: boolean
                  default: false
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/customer/{customer}':
    parameters:
      - name: customer
        in: path
        description: limit output to a specific customer
        allowEmptyValue: false
        style: simple
        required: true
        schema:
          type: string
          title: Customer name scheme
          pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
          example: CustomerName
        example: CustomerName
    get:
      tags:
        - customer
      summary: Get information about a customer
      description: With this GET request you can get information about a customer.
      operationId: customer_name_get
      x-mojo-to:
        - 'RestAPI::Customer#api_get'
        - list: false
      responses:
        '200':
          description: A JSON object holding the information about customers
          content:
            application/json:
              schema:
                type: object
                title: Get customer info object scheme
                additionalProperties:
                  type: object
                  title: Get customer info object
                  properties:
                    adminEmail:
                      type: string
                      format: email
                      example: john.doe@domain.com
                    admins:
                      type: array
                      items:
                        type: string
                        format: email
                        example: john.doe@domain.com
                    comment:
                      type: string
                    creator:
                      type: string
                    defaultGINADomain:
                      type: string
                    deleteOldMessagesGracePeriod:
                      type: integer
                      minimum: 0
                      default: 0
                    deleteUnregistered:
                      type: integer
                      minimum: 0
                      default: 0
                    description:
                      type: string
                    mailRoutes:
                      type: array
                      items:
                        type: string
                    maximumEncryptionLicenses:
                      type: integer
                      minimum: 0
                    maximumLFTLicenses:
                      type: integer
                      minimum: 0
                    name:
                      type: string
                      title: Customer name scheme
                      pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
                      example: CustomerName
                    sendBackupToAdmin:
                      type: boolean
                      default: false
                example:
                  Customer1:
                    adminEmail: foo.bar@chaos.int
                    admins:
                      - bar.foo@int.chaos
                    comment: ''
                    creator: 'Created by admin on Wed Jun 26 16:21:19 2019'
                    defaultGINADomain: ''
                    deleteOldMessagesGracePeriod: 0
                    deleteUnregistered: 0
                    description: Customer1
                    mailRoutes:
                      - int.chaos
                    maximumEncryptionLicenses: ''
                    maximumLFTLicenses: ''
                    name: Customer1
                    sendBackupToAdmin: false
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    put:
      tags:
        - customer
      summary: Modify a customer
      description: >-
        With this PUT request you can change a customer. Only specified values
        will be changed.
      operationId: customer_name_modify
      x-mojo-to: 'RestAPI::Customer#api_modify'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Modify customer object scheme
              description: Customer object for changes
              properties:
                adminEmail:
                  type: string
                  format: email
                  example: john.doe@domain.com
                admins:
                  type: array
                  items:
                    type: string
                    format: email
                    example: john.doe@domain.com
                backupPassword:
                  type: string
                  format: password
                  example: v3ryS3cUr3
                comment:
                  type: string
                defaultGINADomain:
                  type: string
                deleteOldMessagesGracePeriod:
                  type: integer
                  minimum: 0
                deleteUnregistered:
                  type: integer
                  minimum: 0
                description:
                  type: string
                mailRoutes:
                  type: array
                  items:
                    type: string
                maximumEncryptionLicenses:
                  type: integer
                  minimum: 0
                maximumLFTLicenses:
                  type: integer
                  minimum: 0
                sendBackupToAdmin:
                  type: boolean
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    delete:
      tags:
        - customer
      summary: Delete a customer
      description: With this DELETE request you can delete a customer.
      operationId: customer_name_delete
      x-mojo-to: 'RestAPI::Customer#api_delete'
      parameters:
        - in: query
          name: deleteUsers
          schema:
            type: boolean
            default: false
          description: 'if true, delete all users of the customer'
        - in: query
          name: deleteGINAUsers
          schema:
            type: boolean
            default: false
          description: 'if true, delete all GINA users of the customer'
        - in: query
          name: deleteAdminUsers
          schema:
            type: boolean
            default: false
          description: 'if true, delete all admin users of the customer'
        - in: query
          name: deleteManagedDomains
          schema:
            type: boolean
            default: false
          description: 'if true, delete all managed domains of the customer'
        - in: query
          name: deleteGINADomains
          schema:
            type: boolean
            default: false
          description: 'if true, delete all GINA domains of the customer'
        - in: query
          name: deletePolicies
          schema:
            type: boolean
            default: false
          description: 'if true, delete all policies of the customer'
        - in: query
          name: deleteSmarthostCredentials
          schema:
            type: boolean
            default: false
          description: >-
            if true, delete all smarthost credentials exclusively used by the
            customer
        - in: query
          name: deleteEverything
          schema:
            type: boolean
            default: false
          description: 'if true, delete everything of the customer'
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/customer/{customer}/adminuser':
    parameters:
      - name: customer
        in: path
        description: limit output to a specific customer
        allowEmptyValue: false
        style: simple
        required: true
        schema:
          type: string
          title: Customer name scheme
          pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
          example: CustomerName
        example: CustomerName
    post:
      tags:
        - customer
      summary: Add admin users to a customer
      description: With this POST request you can add admin users to a customer.
      operationId: customer_name_adminuser_add
      x-mojo-to:
        - 'RestAPI::Customer#api_adminuser'
        - operation: add
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                admins:
                  type: array
                  items:
                    type: string
                    format: email
                    example: john.doe@domain.com
                  example:
                    - john.doe@domain.com
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    put:
      tags:
        - customer
      summary: Delete admin users from a customer
      description: With this PUT request you can delete admin users from a customer.
      operationId: customer_name_adminuser_delete
      x-mojo-to:
        - 'RestAPI::Customer#api_adminuser'
        - operation: delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                admins:
                  type: array
                  items:
                    type: string
                    format: email
                    example: john.doe@domain.com
                  example:
                    - john.doe@domain.com
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/customer/{customer}/mailroute':
    parameters:
      - name: customer
        in: path
        description: limit output to a specific customer
        allowEmptyValue: false
        style: simple
        required: true
        schema:
          type: string
          title: Customer name scheme
          pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
          example: CustomerName
        example: CustomerName
    post:
      tags:
        - customer
      summary: Add managed domains to a customer
      description: With this POST request you can add managed domains to a customer.
      operationId: customer_name_mailoue_add
      x-mojo-to:
        - 'RestAPI::Customer#api_mailroute'
        - operation: add
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mailRoutes:
                  type: array
                  items:
                    type: string
                    description: String representing a domain name
                    pattern: '^((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                    example: domain.com
                  example:
                    - domain1.com
                    - domain2.com
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    put:
      tags:
        - customer
      summary: Delete managed domains from a customer
      description: With this PUT request you can delete magaed domains from a customer.
      operationId: customer_name_mailroute_delete
      x-mojo-to:
        - 'RestAPI::Customer#api_mailroute'
        - operation: delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mailRoutes:
                  type: array
                  items:
                    type: string
                    description: String representing a domain name
                    pattern: '^((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                    example: domain.com
                  example:
                    - domain1.com
                    - domain2.com
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/customer/{customer}/export':
    parameters:
      - name: customer
        in: path
        description: limit output to a specific customer
        allowEmptyValue: false
        style: simple
        required: true
        schema:
          type: string
          title: Customer name scheme
          pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
          example: CustomerName
        example: CustomerName
    post:
      tags:
        - customer
      summary: Export a customer
      description: With this POST request you can get a complete export of a customer.
      operationId: customer_name_export
      x-mojo-to: 'RestAPI::Customer#api_export'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Export request body object schema
              required:
                - encryptionpassword
              properties:
                encryptionpassword:
                  type: string
                  format: password
                  example: v3ryS3cUr3
      responses:
        '200':
          description: A JSON object holding the complete export of a customer
          content:
            application/json:
              schema:
                type: object
                title: Export object schema
                required:
                  - zippedData
                properties:
                  zippedData:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  /customer/import:
    post:
      tags:
        - customer
      summary: Import a customer
      description: With this POST request you can import an exported customer.
      operationId: customer_import
      x-mojo-to: 'RestAPI::Customer#api_import'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Import request body object schema
              required:
                - zippedData
                - encryptionpassword
              properties:
                zippedData:
                  type: string
                encryptionpassword:
                  type: string
                  format: password
                  example: v3ryS3cUr3
                name:
                  type: string
                  title: Customer name scheme
                  pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
                  example: CustomerName
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  /statistics:
    get:
      tags:
        - statistics
      summary: Get statistics
      description: 'Get statistics about users, domains, customers and GINA accounts'
      operationId: statistics_get
      x-mojo-to: 'RestAPI::Statistics#api_get'
      parameters:
        - name: rebuildList
          in: query
          description: >-
            If true, the statistics list will be rebuilt. Otherwise the list
            will be rebuilt if not present of older than 12 hours.
          required: false
          schema:
            type: boolean
            default: false
        - name: type
          in: query
          required: false
          schema:
            type: string
            title: Statistics type
            enum:
              - user
              - domain
              - all
            default: all
      responses:
        '200':
          description: >-
            A JSON object holding the statistics about the requested statistics
            type.
          content:
            application/json:
              schema:
                type: object
                title: Get statistics object scheme
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  /group:
    get:
      tags:
        - group
      summary: Get information about a locally existing group
      description: >-
        With this GET request you can get information about a locally existing
        group.
      operationId: group_get
      x-mojo-to: 'RestAPI::Group#api_get'
      parameters:
        - in: query
          name: list
          required: false
          schema:
            type: boolean
            default: false
          description: 'if true, return an array of names instead of detailed information'
      responses:
        '200':
          description: A JSON object holding the information about groups
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: Get group info object scheme
                    additionalProperties:
                      type: object
                      title: Get group info object
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        members:
                          type: array
                          items:
                            type: string
                            format: email
                            example: john.doe@domain.com
                    example:
                      GroupName:
                        name: GroupName
                        description: Group's description
                        members:
                          - john.doe@domain.com
                  - type: array
                    items:
                      type: string
                      description: String representing a name
                      example: Name
                    example:
                      - Name
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    post:
      tags:
        - group
      summary: Add a new local group.
      description: Adds a new local group with the specified attributes
      operationId: group_add
      x-mojo-to: 'RestAPI::Group#api_add'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Create group object scheme
              description: Group object for initial creation
              required:
                - name
                - description
              properties:
                name:
                  type: string
                description:
                  type: string
                members:
                  type: array
                  items:
                    type: string
                    format: email
                    example: john.doe@domain.com
                  example:
                    - john.doe@domain.com
              example:
                name: GroupName
                description: Description for the group GroupName
                members:
                  - admin@domain.com
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/group/{name}':
    parameters:
      - name: name
        in: path
        description: limit output to a specific group name
        allowEmptyValue: false
        style: simple
        required: true
        x-mojo-placeholder: '#'
        schema:
          type: string
        example: admin
    get:
      tags:
        - group
      summary: Get information about a locally existing group
      description: >-
        With this GET request you can get information about a locally existing
        group.
      operationId: group_name_get
      x-mojo-to:
        - 'RestAPI::Group#api_get'
        - list: false
      responses:
        '200':
          description: A JSON object holding the information about groups
          content:
            application/json:
              schema:
                type: object
                title: Get group info object scheme
                additionalProperties:
                  type: object
                  title: Get group info object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    members:
                      type: array
                      items:
                        type: string
                        format: email
                        example: john.doe@domain.com
                example:
                  GroupName:
                    name: GroupName
                    description: Group's description
                    members:
                      - john.doe@domain.com
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    put:
      tags:
        - group
      summary: Modify a locally existing group
      description: >-
        With this PUT request you can change a locally existing group. Only
        specified values will be changed.
      operationId: group_name_modify
      x-mojo-to: 'RestAPI::Group#api_modify'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Modify group object scheme
              description: Group object for changes
              properties:
                name:
                  type: string
                description:
                  type: string
                members:
                  type: array
                  items:
                    type: string
                    format: email
                    example: john.doe@domain.com
                  example:
                    - john.doe@domain.com
              example:
                name: GroupName
                description: Description for the group GroupName
                members:
                  - admin@domain.com
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    delete:
      tags:
        - group
      summary: Delete a locally existing group
      description: With this DELETE request you can delete a locally existing group.
      operationId: group_name_delete
      x-mojo-to: 'RestAPI::Group#api_delete'
      parameters:
        - in: query
          name: deleteUsers
          required: false
          schema:
            type: string
            enum:
              - 'no'
              - allButKeepKeys
              - all
            default: 'no'
          description: >-
            Specifies if the group members should be deleted and if their keys
            schould be kept
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/group/{name}/member':
    parameters:
      - name: name
        in: path
        description: limit output to a specific group name
        allowEmptyValue: false
        style: simple
        required: true
        x-mojo-placeholder: '#'
        schema:
          type: string
        example: admin
    post:
      tags:
        - group
      summary: Add users to a group
      description: With this POST request you can add users to a group.
      operationId: group_member_add
      x-mojo-to:
        - 'RestAPI::Group#api_member'
        - operation: add
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                members:
                  type: array
                  items:
                    type: string
                    format: email
                    example: john.doe@domain.com
                  example:
                    - john.doe@domain.com
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    put:
      tags:
        - group
      summary: Delete users from a group
      description: With this PUT request you can delete users from a group.
      operationId: group_member_delete
      x-mojo-to:
        - 'RestAPI::Group#api_member'
        - operation: delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                members:
                  type: array
                  items:
                    type: string
                    format: email
                    example: john.doe@domain.com
                  example:
                    - john.doe@domain.com
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  /webmail/user:
    get:
      tags:
        - webmail
      summary: Get information about an existing webmail user
      description: >-
        With this GET request you can get information about an existing webmail
        user.
      operationId: webmail_user_get
      x-mojo-to: 'RestAPI::Webmail::User#api_get'
      parameters:
        - name: customer
          in: query
          description: limit output to a specific customer
          allowEmptyValue: false
          required: false
          schema:
            type: string
            title: Customer name scheme
            pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
            example: CustomerName
          example: CustomerName
        - in: query
          name: list
          required: false
          schema:
            type: boolean
            default: false
          description: 'if true, return an array of names instead of detailed information'
        - name: email
          in: query
          description: specify the GINA-User by e-mail address
          allowEmptyValue: false
          required: false
          schema:
            type: string
            format: email
            example: john.doe@domain.com
          example: john.doe@domain.com
        - name: name
          in: query
          description: limit output to a specific name
          allowEmptyValue: false
          required: false
          schema:
            type: string
            description: String representing a name
            example: Name
          example: Name
        - name: mobile
          in: query
          description: limit output to a specific phone number
          allowEmptyValue: false
          required: false
          schema:
            type: string
            description: Mobile number with country code
            example: 0049 123 4567890
          example: 00491234567890
      responses:
        '200':
          description: A JSON object holding the information about webmail users
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: Get webmail users customer object scheme
                    additionalProperties:
                      type: object
                      title: Get webmail users info object scheme
                      additionalProperties:
                        type: object
                        title: Get webmail user info object
                        properties:
                          customer:
                            type: string
                            title: Customer name scheme
                            pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
                            example: CustomerName
                          email:
                            type: string
                            format: email
                            example: john.doe@domain.com
                          creationInfo:
                            type: string
                          createdByWhom:
                            type: string
                          createdByWhat:
                            type: string
                          createdDate:
                            oneOf:
                              - type: string
                                format: date-time
                                description: Creation date in ISO8601 format.
                              - type: string
                                minLength: 0
                                maxLength: 0
                                default: ''
                                description: An empty string
                          name:
                            type: string
                            description: String representing a name
                            example: Name
                          language:
                            oneOf:
                              - type: string
                                title: Language shortcut
                                pattern: '^[a-z]$'
                                description: 'A language shortcut, e.g. ''e'' for english.'
                              - type: string
                                minLength: 0
                                maxLength: 0
                                default: ''
                                description: An empty string
                          zipAttachment:
                            type: boolean
                            description: >-
                              Boolean value indicating if the secure mail
                              attachment shoud be zip-ed.
                          mustChangePassword:
                            type: boolean
                            description: >-
                              Boolean value indicating whether a user must
                              change his password at the next login.
                          mobile:
                            type: string
                            description: Mobile number with country code
                            example: 0049 123 4567890
                          accountInfo:
                            type: string
                            description: info about the status of an webmail user's account
                            enum:
                              - enabled
                              - locked by admin
                              - locked temporarily
                          badPasswordCount:
                            type: integer
                            minimum: 0
                            description: number of wrong passwords inserted
                          accountLastUsed:
                            oneOf:
                              - type: string
                                format: date-time
                                description: Date and time of last usage
                              - type: string
                                minLength: 0
                                maxLength: 0
                                default: ''
                                description: An empty string
                          accountStatus:
                            type: string
                            description: >-
                              Indicating if the users account is locked or
                              enabled
                            enum:
                              - locked
                              - enabled
                          externalAuthentication:
                            type: boolean
                            description: >-
                              Boolean value indicating if external
                              authentication is allowed for a user.
                          passwordSecurityLevel:
                            type: string
                            enum:
                              - Default
                              - Reset by e-mail verification
                              - >-
                                Reset by e-mail verification, no reminder
                                question/answer
                              - Reset by hotline
                              - 'Reset by hotline, no reminder question/answer'
                              - Reset by SMS
                              - 'Reset by SMS, no reminder question/answer'
                              - Let user choose between hotline and SMS
                          authToken:
                            oneOf:
                              - type: string
                                minLength: 32
                                description: AuthToken used by file.app.
                              - type: string
                                minLength: 0
                                maxLength: 0
                                default: ''
                                description: An empty string
                          registered:
                            type: boolean
                            description: >-
                              Boolean value indicating if the webmail user is
                              already registered.
                      example:
                        john.doe@domain.com:
                          customer: CustomerName
                          email: john.doe@domain.com
                          creationInfo: >-
                            Account <creator@test> registered on Mon Oct 23
                            20:49:23 2017
                          createdByWhom: abcdefghi
                          createdByWhat: restApi.app
                          createdDate: '2021-02-19T09:37:58Z'
                          name: Webmail User Name
                          language: e
                          zipAttachment: false
                          mustChangePassword: false
                          mobile: 0049 123 4567890
                          question: Do you know the password
                          accountInfo: enabled
                          badPasswordCount: 1
                          accountLastUsed: '2021-02-19T19:46:46Z'
                          accountStatus: enabled
                          externalAuthentication: true
                          passwordSecurityLevel: Reset by SMS
                          authToken: 8eqpLkU5I4sDoBVahcuvC4ZeMdnNwRyu
                    example:
                      CustomerName:
                        john.doe@domain.com:
                          customer: CustomerName
                          email: john.doe@domain.com
                          creationInfo: >-
                            Account <creator@test> registered on Mon Oct 23
                            20:49:23 2017
                          createdByWhom: abcdefghi
                          createdByWhat: restApi.app
                          createdDate: '2021-02-19T09:37:58Z'
                          name: Webmail User Name
                          language: e
                          zipAttachment: false
                          mustChangePassword: false
                          mobile: 0049 123 4567890
                          question: Do you know the password
                          accountInfo: enabled
                          badPasswordCount: 1
                          accountLastUsed: '2021-02-19T19:46:46Z'
                          accountStatus: enabled
                          externalAuthentication: true
                          passwordSecurityLevel: Reset by SMS
                          authToken: 8eqpLkU5I4sDoBVahcuvC4ZeMdnNwRyu
                  - type: array
                    items:
                      type: string
                      format: email
                      example: john.doe@domain.com
                    example:
                      - john.doe@domain.com
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    post:
      tags:
        - webmail
      summary: Add a new webmail user.
      description: Adds a new webmail user with the specified attributes
      operationId: webmail_user_add
      x-mojo-to: 'RestAPI::Webmail::User#api_add'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Create user object scheme
              description: User object for initial creation
              required:
                - email
                - name
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: john.doe@domain.com
                name:
                  type: string
                  description: String representing a name
                  example: Name
                creationInfo:
                  type: string
                password:
                  type: string
                  format: password
                  example: v3ryS3cUr3
                customer:
                  type: string
                  title: Customer name scheme
                  pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
                  example: CustomerName
                  default: '[default]'
                mobile:
                  type: string
                  description: Mobile number with country code
                  example: 0049 123 4567890
                  default: ''
                language:
                  oneOf:
                    - type: string
                      title: Language shortcut
                      pattern: '^[a-z]$'
                      description: 'A language shortcut, e.g. ''e'' for english.'
                    - type: string
                      minLength: 0
                      maxLength: 0
                      default: ''
                      description: An empty string
                  default: ''
                zipAttachment:
                  type: boolean
                  description: >-
                    Boolean value indicating if the secure mail attachment shoud
                    be zip-ed.
                  default: false
                mustChangePassword:
                  type: boolean
                  description: >-
                    Boolean value indicating whether a user must change his
                    password at the next login.
                  default: true
                question:
                  type: string
                  description: Password reminder question
                  default: ''
                answer:
                  type: string
                  description: Password reminder answer.
                  default: ''
                accountStatus:
                  type: string
                  description: Indicating if the users account is locked or enabled
                  enum:
                    - locked
                    - enabled
                  default: enabled
                externalAuthentication:
                  type: boolean
                  description: >-
                    Boolean value indicating if external authentication is
                    allowed for a user.
                  default: true
                passwordSecurityLevel:
                  type: string
                  enum:
                    - Default
                    - Reset by e-mail verification
                    - 'Reset by e-mail verification, no reminder question/answer'
                    - Reset by hotline
                    - 'Reset by hotline, no reminder question/answer'
                    - Reset by SMS
                    - 'Reset by SMS, no reminder question/answer'
                    - Let user choose between hotline and SMS
                  default: Default
                authToken:
                  oneOf:
                    - type: string
                      minLength: 32
                      description: AuthToken used by file.app.
                    - type: string
                      minLength: 0
                      maxLength: 0
                      default: ''
                      description: An empty string
                  default: ''
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/webmail/user/{email}':
    parameters:
      - name: email
        in: path
        description: specify the GINA-User by e-mail address
        allowEmptyValue: false
        style: simple
        required: true
        x-mojo-placeholder: '#'
        schema:
          type: string
          format: email
          example: john.doe@domain.com
        example: john.doe@domain.com
    put:
      tags:
        - webmail
      summary: Modify a locally existing webmail user
      description: >-
        With this PUT request you can change a locally existing webmail user.
        Only specified values will be changed.
      operationId: webmail_user_email_modify
      x-mojo-to: 'RestAPI::Webmail::User#api_modify'
      parameters:
        - name: customer
          in: query
          description: limit output to a specific customer
          allowEmptyValue: false
          required: false
          schema:
            type: string
            title: Customer name scheme
            pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
            example: CustomerName
          example: CustomerName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Modify user object scheme
              description: User object for webmail user changes
              properties:
                name:
                  type: string
                  description: String representing a name
                  example: Name
                password:
                  type: string
                  format: password
                  example: v3ryS3cUr3
                customer:
                  type: string
                  title: Customer name scheme
                  pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
                  example: CustomerName
                  default: '[default]'
                mobile:
                  type: string
                  description: Mobile number with country code
                  example: 0049 123 4567890
                  default: ''
                language:
                  oneOf:
                    - type: string
                      title: Language shortcut
                      pattern: '^[a-z]$'
                      description: 'A language shortcut, e.g. ''e'' for english.'
                    - type: string
                      minLength: 0
                      maxLength: 0
                      default: ''
                      description: An empty string
                  default: ''
                zipAttachment:
                  type: boolean
                  description: >-
                    Boolean value indicating if the secure mail attachment shoud
                    be zip-ed.
                  default: false
                mustChangePassword:
                  type: boolean
                  description: >-
                    Boolean value indicating whether a user must change his
                    password at the next login.
                  default: true
                question:
                  type: string
                  description: Password reminder question
                  default: ''
                answer:
                  type: string
                  description: Password reminder answer.
                  default: ''
                accountStatus:
                  type: string
                  description: Indicating if the users account is locked or enabled
                  enum:
                    - locked
                    - enabled
                  default: enabled
                externalAuthentication:
                  type: boolean
                  description: >-
                    Boolean value indicating if external authentication is
                    allowed for a user.
                  default: true
                passwordSecurityLevel:
                  type: string
                  enum:
                    - Default
                    - Reset by e-mail verification
                    - 'Reset by e-mail verification, no reminder question/answer'
                    - Reset by hotline
                    - 'Reset by hotline, no reminder question/answer'
                    - Reset by SMS
                    - 'Reset by SMS, no reminder question/answer'
                    - Let user choose between hotline and SMS
                  default: Default
                authToken:
                  oneOf:
                    - type: string
                      minLength: 32
                      description: AuthToken used by file.app.
                    - type: string
                      minLength: 0
                      maxLength: 0
                      default: ''
                      description: An empty string
                  default: ''
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    delete:
      tags:
        - webmail
      summary: Delete a locally existing webmail user
      description: With this DELETE request you can delete a locally existing webmail user.
      operationId: webmail_user_email_delete
      x-mojo-to: 'RestAPI::Webmail::User#api_delete'
      parameters:
        - name: customer
          in: query
          description: limit output to a specific customer
          allowEmptyValue: false
          required: false
          schema:
            type: string
            title: Customer name scheme
            pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
            example: CustomerName
          example: CustomerName
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  /mailsystem/template:
    get:
      tags:
        - mail system / template
      summary: Get data of template
      description: With this GET request you can get data of configured template.
      operationId: mailsystem_template_get
      x-mojo-to:
        - 'RestAPI::Mailsystem::Template#api_get'
        - templateType: template
      parameters:
        - in: query
          name: list
          required: false
          schema:
            type: boolean
            default: false
          description: 'if true, return an array of names instead of detailed information'
        - name: name
          in: query
          description: limit output to a specific name
          allowEmptyValue: false
          required: false
          schema:
            type: string
            description: String representing a name
            example: Name
          example: Name
        - name: withData
          in: query
          description: >-
            if true the binary data (base64 encoded) of inlines and attachments
            will be returned
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: A JSON object holding the data of a template
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: Get template info object scheme
                    additionalProperties:
                      type: object
                      title: Get template info object
                      required:
                        - templateName
                      properties:
                        templateName:
                          type: string
                          pattern: '^[^\s#]*$'
                        subject:
                          type: string
                          description: subject of the mail this template is used for
                        addHTMLPart:
                          type: boolean
                          description: >-
                            In case of a template a text/html part will be
                            added. In case of a disclaimer the HTML text will be
                            added to the text/html part if the mail has one.
                        addTextPart:
                          type: boolean
                          description: >-
                            In case of a template a text/plain part will be
                            added. In case of a disclaimer the plain text will
                            be added to the text/plain part if the mail has one.
                        text:
                          type: string
                          description: Plan text for a template/disclaimer
                        html:
                          type: string
                          description: HTML for a template/disclaimer
                        inlines:
                          type: array
                          description: Object holding inline or attachment data
                          items:
                            type: object
                            properties:
                              fileName:
                                type: string
                                description: String representing a name
                                example: Name
                              fileData:
                                type: string
                                format: byte
                              contentType:
                                type: string
                                description: content type e.g. image/jpeg
                              contentID:
                                type: string
                                description: content ID of an inline or attachment
                            example:
                              - fileName: logo.gif
                                fileData: >-
                                  R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                                contentType: image/gif
                                contentID: logo
                        attachments:
                          type: array
                          description: Object holding inline or attachment data
                          items:
                            type: object
                            properties:
                              fileName:
                                type: string
                                description: String representing a name
                                example: Name
                              fileData:
                                type: string
                                format: byte
                              contentType:
                                type: string
                                description: content type e.g. image/jpeg
                              contentID:
                                type: string
                                description: content ID of an inline or attachment
                            example:
                              - fileName: logo.gif
                                fileData: >-
                                  R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                                contentType: image/gif
                                contentID: logo
                    example:
                      Name:
                        templateName: Template_Name
                        addHTMLPart: true
                        subject: Template subject
                        html: >-
                          <b>templat's HTML content</b><br><img src="cid:logo2"
                          alt="logo2.gif" width="100%">
                        inlines:
                          - fileName: logo2.gif
                            fileData: >-
                              R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                            contentType: image/gif
                            contentID: logo2
                        attachments:
                          - fileName: logo.gif
                            fileData: >-
                              R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                            contentType: image/gif
                            contentID: logo
                  - type: array
                    items:
                      type: string
                      description: String representing a name
                      example: Name
                    example:
                      - Name
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    post:
      tags:
        - mail system / template
      summary: Add a new template.
      description: Adds a new template with the specified attributes
      operationId: mailsystem_template_add
      x-mojo-to:
        - 'RestAPI::Mailsystem::Template#api_add'
        - templateType: template
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Add template info object
              required:
                - templateName
              properties:
                templateName:
                  type: string
                  pattern: '^[^\s#]*$'
                subject:
                  type: string
                  description: subject of the mail this template is used for
                  default: ''
                addHTMLPart:
                  type: boolean
                  description: >-
                    In case of a template a text/html part will be added. In
                    case of a disclaimer the HTML text will be added to the
                    text/html part if the mail has one.
                  default: true
                addTextPart:
                  type: boolean
                  description: >-
                    In case of a template a text/plain part will be added. In
                    case of a disclaimer the plain text will be added to the
                    text/plain part if the mail has one.
                  default: true
                text:
                  type: string
                  description: >-
                    If empty the SEPPmail's default plain text for templates
                    will be used
                html:
                  type: string
                  description: >-
                    If empty the SEPPmail's default html text for templates will
                    be used
                inlines:
                  type: array
                  description: Object holding inline or attachment data for an add
                  items:
                    type: object
                    required:
                      - fileName
                      - fileData
                      - contentType
                    properties:
                      fileName:
                        type: string
                        description: String representing a name
                        example: Name
                      fileData:
                        type: string
                        format: byte
                      contentType:
                        type: string
                        description: content type e.g. image/jpeg
                      contentID:
                        type: string
                        description: content ID of an inline or attachment
                    example:
                      - fileName: logo.gif
                        fileData: >-
                          R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                        contentType: image/gif
                        contentID: logo
                  default: []
                attachments:
                  type: array
                  description: Object holding inline or attachment data for an add
                  items:
                    type: object
                    required:
                      - fileName
                      - fileData
                      - contentType
                    properties:
                      fileName:
                        type: string
                        description: String representing a name
                        example: Name
                      fileData:
                        type: string
                        format: byte
                      contentType:
                        type: string
                        description: content type e.g. image/jpeg
                      contentID:
                        type: string
                        description: content ID of an inline or attachment
                    example:
                      - fileName: logo.gif
                        fileData: >-
                          R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                        contentType: image/gif
                        contentID: logo
                  default: []
              example:
                templateName: Template_Name
                addHTMLPart: true
                subject: Template subject
                html: >-
                  <b>templat's HTML content</b><br><img src="cid:logo2"
                  alt="logo2.gif" width="100%">
                inlines:
                  - fileName: logo2.gif
                    fileData: >-
                      R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                    contentType: image/gif
                    contentID: logo2
                attachments:
                  - fileName: logo.gif
                    fileData: >-
                      R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                    contentType: image/gif
                    contentID: logo
            example:
              templateName: Template_Name
              addHTMLPart: true
              addTextPart: false
              subject: Template subject
              html: >-
                <b>template's HTML content</b><br><img src="cid:logo2"
                alt="logo2.gif" width="100%">
              text: template's text content
              inlines:
                - fileName: logo2.gif
                  fileData: >-
                    R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                  contentType: image/gif
                  contentID: logo2
              attachments:
                - fileName: logo.gif
                  fileData: >-
                    R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                  contentType: image/gif
                  contentID: logo
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/mailsystem/template/{name}':
    parameters:
      - name: name
        in: path
        description: specifies the template's name
        allowEmptyValue: false
        style: simple
        required: true
        schema:
          type: string
          pattern: '^[^\s#]*$'
        example: templateName
    put:
      tags:
        - mail system / template
      summary: Modify an existing template
      description: >-
        With this PUT request you can modify a template. Only specified values
        will be changed. It meight be nececcars to regenerate the ruleset
        afterwards.
      operationId: mailsystem_template_name_modify
      x-mojo-to:
        - 'RestAPI::Mailsystem::Template#api_modify'
        - templateType: template
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Modify template info object
              properties:
                templateName:
                  type: string
                  pattern: '^[^\s#]*$'
                subject:
                  type: string
                  description: subject of the mail this template is used for
                  default: ''
                addHTMLPart:
                  type: boolean
                  description: >-
                    In case of a template a text/html part will be added. In
                    case of a disclaimer the HTML text will be added to the
                    text/html part if the mail has one.
                  default: true
                addTextPart:
                  type: boolean
                  description: >-
                    In case of a template a text/plain part will be added. In
                    case of a disclaimer the plain text will be added to the
                    text/plain part if the mail has one.
                  default: true
                text:
                  type: string
                  description: >-
                    If empty the SEPPmail's default plain text for templates
                    will be used
                html:
                  type: string
                  description: >-
                    If empty the SEPPmail's default html text for templates will
                    be used
                inlines:
                  type: array
                  description: Object holding inline or attachment data for an add
                  items:
                    type: object
                    required:
                      - fileName
                      - fileData
                      - contentType
                    properties:
                      fileName:
                        type: string
                        description: String representing a name
                        example: Name
                      fileData:
                        type: string
                        format: byte
                      contentType:
                        type: string
                        description: content type e.g. image/jpeg
                      contentID:
                        type: string
                        description: content ID of an inline or attachment
                    example:
                      - fileName: logo.gif
                        fileData: >-
                          R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                        contentType: image/gif
                        contentID: logo
                  default: []
                attachments:
                  type: array
                  description: Object holding inline or attachment data for an add
                  items:
                    type: object
                    required:
                      - fileName
                      - fileData
                      - contentType
                    properties:
                      fileName:
                        type: string
                        description: String representing a name
                        example: Name
                      fileData:
                        type: string
                        format: byte
                      contentType:
                        type: string
                        description: content type e.g. image/jpeg
                      contentID:
                        type: string
                        description: content ID of an inline or attachment
                    example:
                      - fileName: logo.gif
                        fileData: >-
                          R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                        contentType: image/gif
                        contentID: logo
                  default: []
              example:
                templateName: Template_Name
                addHTMLPart: true
                subject: Template subject
                html: >-
                  <b>templat's HTML content</b><br><img src="cid:logo2"
                  alt="logo2.gif" width="100%">
                inlines:
                  - fileName: logo2.gif
                    fileData: >-
                      R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                    contentType: image/gif
                    contentID: logo2
                attachments:
                  - fileName: logo.gif
                    fileData: >-
                      R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                    contentType: image/gif
                    contentID: logo
            example:
              templateName: Template_Name
              addHTMLPart: true
              addTextPart: false
              subject: Template subject
              html: >-
                <b>template's HTML content</b><br><img src="cid:logo2"
                alt="logo2.gif" width="100%">
              text: template's text content
              inlines:
                - fileName: logo2.gif
                  fileData: >-
                    R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                  contentType: image/gif
                  contentID: logo2
              attachments:
                - fileName: logo.gif
                  fileData: >-
                    R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                  contentType: image/gif
                  contentID: logo
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    delete:
      tags:
        - mail system / template
      summary: Delete a template
      description: >-
        With this DELETE request you can delete a template and remove its usage
        from all policies and managed domains. It meight be nececcars to
        regenerate the ruleset afterwards.
      operationId: mailsystem_template_name_delete
      x-mojo-to:
        - 'RestAPI::Mailsystem::Template#api_delete'
        - templateType: template
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/mailsystem/template/{name}/{includesType}':
    parameters:
      - name: name
        in: path
        description: specifies the template's name
        allowEmptyValue: false
        style: simple
        required: true
        schema:
          type: string
          pattern: '^[^\s#]*$'
        example: templateName
      - name: includesType
        in: path
        description: specifies the includes type
        allowEmptyValue: false
        style: simple
        required: true
        schema:
          type: string
          description: type of an include
          enum:
            - inline
            - attachment
        example: inline
    get:
      tags:
        - mail system / template
      summary: Get data of template's includes
      description: >-
        With this GET request you can get the data the includes of a configured
        template.
      operationId: mailsystem_template_name_includes_get
      x-mojo-to:
        - 'RestAPI::Mailsystem::Template#api_get_includes'
        - templateType: template
      parameters:
        - in: query
          name: list
          required: false
          schema:
            type: boolean
            default: false
          description: 'if true, return an array of names instead of detailed information'
        - name: withData
          in: query
          description: >-
            if true the binary data (base64 encoded) of inlines and attachments
            will be returned
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: A JSON object holding the data of a list of includes
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    description: Object holding inline or attachment data
                    items:
                      type: object
                      properties:
                        fileName:
                          type: string
                          description: String representing a name
                          example: Name
                        fileData:
                          type: string
                          format: byte
                        contentType:
                          type: string
                          description: content type e.g. image/jpeg
                        contentID:
                          type: string
                          description: content ID of an inline or attachment
                      example:
                        - fileName: logo.gif
                          fileData: >-
                            R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                          contentType: image/gif
                          contentID: logo
                  - type: array
                    items:
                      type: string
                      description: String representing a name
                      example: Name
                    example:
                      - Name
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    post:
      tags:
        - mail system / template
      summary: Add an inline/attachment to the template
      description: With this POST request you can add an inline/attachment to the template.
      operationId: mailsystem_template_name_includes_add
      x-mojo-to:
        - 'RestAPI::Mailsystem::Template#api_add_delete_includes'
        - operation: add
          templateType: template
      requestBody:
        required: true
        description: an array of objects holding inline or attachment data
        content:
          application/json:
            schema:
              type: array
              description: Object holding inline or attachment data for an add
              items:
                type: object
                required:
                  - fileName
                  - fileData
                  - contentType
                properties:
                  fileName:
                    type: string
                    description: String representing a name
                    example: Name
                  fileData:
                    type: string
                    format: byte
                  contentType:
                    type: string
                    description: content type e.g. image/jpeg
                  contentID:
                    type: string
                    description: content ID of an inline or attachment
                example:
                  - fileName: logo.gif
                    fileData: >-
                      R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                    contentType: image/gif
                    contentID: logo
            example:
              - fileName: logo.gif
                fileData: >-
                  R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                contentType: image/gif
                contentID: logo
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    put:
      tags:
        - mail system / template
      summary: Delete an inline/attachment from the template
      description: >-
        With this PUT request you can delete an inline/attachment from the
        template.
      operationId: mailsystem_templatetype_name_includes_delete
      x-mojo-to:
        - 'RestAPI::Mailsystem::Template#api_add_delete_includes'
        - operation: delete
          templateType: template
      requestBody:
        required: true
        description: an array of file names to delete
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: String representing a name
                example: Name
              example:
                - Name
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  /mailsystem/disclaimer:
    get:
      tags:
        - mail system / disclaimer
      summary: Get data of disclaimer
      description: With this GET request you can get data of configured disclaimers.
      operationId: mailsystem_disclaimer_get
      x-mojo-to:
        - 'RestAPI::Mailsystem::Template#api_get'
        - templateType: disclaimer
      parameters:
        - in: query
          name: list
          required: false
          schema:
            type: boolean
            default: false
          description: 'if true, return an array of names instead of detailed information'
        - name: name
          in: query
          description: limit output to a specific name
          allowEmptyValue: false
          required: false
          schema:
            type: string
            description: String representing a name
            example: Name
          example: Name
        - name: withData
          in: query
          description: >-
            if true the binary data (base64 encoded) of inlines and attachments
            will be returned
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: A JSON object holding the data of a template
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: Get template info object scheme
                    additionalProperties:
                      type: object
                      title: Get template info object
                      required:
                        - disclaimerName
                      properties:
                        disclaimerName:
                          type: string
                          pattern: '^[^\s#]*$'
                        addHTMLPart:
                          type: boolean
                          description: >-
                            In case of a template a text/html part will be
                            added. In case of a disclaimer the HTML text will be
                            added to the text/html part if the mail has one.
                        addTextPart:
                          type: boolean
                          description: >-
                            In case of a template a text/plain part will be
                            added. In case of a disclaimer the plain text will
                            be added to the text/plain part if the mail has one.
                        addEmptyParts:
                          type: boolean
                          description: >-
                            if a text/html or text/plain part in the mail is
                            missing but the disclaimer has data for it, add it.
                        forceUTF8:
                          type: boolean
                          description: Transform all manipulated parts into UTF-8
                        text:
                          type: string
                          description: Plan text for a template/disclaimer
                        html:
                          type: string
                          description: HTML for a template/disclaimer
                        inlines:
                          type: array
                          description: Object holding inline or attachment data
                          items:
                            type: object
                            properties:
                              fileName:
                                type: string
                                description: String representing a name
                                example: Name
                              fileData:
                                type: string
                                format: byte
                              contentType:
                                type: string
                                description: content type e.g. image/jpeg
                              contentID:
                                type: string
                                description: content ID of an inline or attachment
                            example:
                              - fileName: logo.gif
                                fileData: >-
                                  R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                                contentType: image/gif
                                contentID: logo
                        attachments:
                          type: array
                          description: Object holding inline or attachment data
                          items:
                            type: object
                            properties:
                              fileName:
                                type: string
                                description: String representing a name
                                example: Name
                              fileData:
                                type: string
                                format: byte
                              contentType:
                                type: string
                                description: content type e.g. image/jpeg
                              contentID:
                                type: string
                                description: content ID of an inline or attachment
                            example:
                              - fileName: logo.gif
                                fileData: >-
                                  R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                                contentType: image/gif
                                contentID: logo
                    example:
                      Name:
                        disclaimerName: Disclaimer_Name
                        addTextPart: true
                        forceUTF8: false
                        text: This is a disclaimer
                        inlines:
                          - inline name 1
                          - inline name 2
                        attachments:
                          - fileName: logo.gif
                            fileData: >-
                              R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                            contentType: image/gif
                            contentID: logo
                          - fileName: logo2.gif
                            fileData: >-
                              R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                            contentType: image/gif
                            contentID: logo2
                  - type: array
                    items:
                      type: string
                      description: String representing a name
                      example: Name
                    example:
                      - Name
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    post:
      tags:
        - mail system / disclaimer
      summary: Add a new disclaimer.
      description: Adds a new disclaimer with the specified attributes
      operationId: mailsystem_disclaimer_add
      x-mojo-to:
        - 'RestAPI::Mailsystem::Template#api_add'
        - templateType: disclaimer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Add disclaimer info object
              required:
                - disclaimerName
              properties:
                disclaimerName:
                  type: string
                  pattern: '^[^\s#]*$'
                addHTMLPart:
                  type: boolean
                  description: >-
                    In case of a template a text/html part will be added. In
                    case of a disclaimer the HTML text will be added to the
                    text/html part if the mail has one.
                  default: true
                addTextPart:
                  type: boolean
                  description: >-
                    In case of a template a text/plain part will be added. In
                    case of a disclaimer the plain text will be added to the
                    text/plain part if the mail has one.
                  default: true
                addEmptyParts:
                  type: boolean
                  description: >-
                    if a text/html or text/plain part in the mail is missing but
                    the disclaimer has data for it, add it.
                  default: false
                forceUTF8:
                  type: boolean
                  description: Transform all manipulated parts into UTF-8
                  default: false
                text:
                  type: string
                  description: >-
                    If empty then SEPPmail's default plain text for templates
                    will be used
                html:
                  type: string
                  description: >-
                    If empty then SEPPmail's default html text for templates
                    will be used
                inlines:
                  type: array
                  description: Object holding inline or attachment data for an add
                  items:
                    type: object
                    required:
                      - fileName
                      - fileData
                      - contentType
                    properties:
                      fileName:
                        type: string
                        description: String representing a name
                        example: Name
                      fileData:
                        type: string
                        format: byte
                      contentType:
                        type: string
                        description: content type e.g. image/jpeg
                      contentID:
                        type: string
                        description: content ID of an inline or attachment
                    example:
                      - fileName: logo.gif
                        fileData: >-
                          R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                        contentType: image/gif
                        contentID: logo
                  default: []
                attachments:
                  type: array
                  description: Object holding inline or attachment data for an add
                  items:
                    type: object
                    required:
                      - fileName
                      - fileData
                      - contentType
                    properties:
                      fileName:
                        type: string
                        description: String representing a name
                        example: Name
                      fileData:
                        type: string
                        format: byte
                      contentType:
                        type: string
                        description: content type e.g. image/jpeg
                      contentID:
                        type: string
                        description: content ID of an inline or attachment
                    example:
                      - fileName: logo.gif
                        fileData: >-
                          R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                        contentType: image/gif
                        contentID: logo
                  default: []
              example:
                disclaimerName: Disclaimer_Name
                addHTMLPart: true
                forceUTF8: true
                html: >-
                  <b>templat's HTML content</b><br><img src="cid:logo2"
                  alt="logo2.gif" width="100%">
                inlines:
                  - fileName: logo2.gif
                    fileData: >-
                      R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                    contentType: image/gif
                    contentID: logo2
                attachments:
                  - fileName: logo.gif
                    fileData: >-
                      R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                    contentType: image/gif
                    contentID: logo
            example:
              disclaimerName: Disclaimer_Name
              addHTMLPart: true
              addTextPart: false
              forceUTF8: false
              addEmptyParts: true
              html: >-
                <b>disclaimer's HTML content</b><br><img src="cid:logo2"
                alt="logo2.gif" width="100%">
              text: disclaimer's test content
              inlines:
                - fileName: logo2.gif
                  fileData: >-
                    R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                  contentType: image/gif
                  contentID: logo2
              attachments:
                - fileName: logo.gif
                  fileData: >-
                    R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                  contentType: image/gif
                  contentID: logo
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/mailsystem/disclaimer/{name}':
    parameters:
      - name: name
        in: path
        description: specifies the template's name
        allowEmptyValue: false
        style: simple
        required: true
        schema:
          type: string
          pattern: '^[^\s#]*$'
        example: templateName
    put:
      tags:
        - mail system / disclaimer
      summary: Modify an existing disclaimer
      description: >-
        With this PUT request you can modify a disclaimer. Only specified values
        will be changed. It meight be nececcars to regenerate the ruleset
        afterwards.
      operationId: mailsystem_disclaimer_name_modify
      x-mojo-to:
        - 'RestAPI::Mailsystem::Template#api_modify'
        - templateType: disclaimer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Modify disclaimer info object
              properties:
                disclaimerName:
                  type: string
                  pattern: '^[^\s#]*$'
                addHTMLPart:
                  type: boolean
                  description: >-
                    In case of a template a text/html part will be added. In
                    case of a disclaimer the HTML text will be added to the
                    text/html part if the mail has one.
                  default: true
                addTextPart:
                  type: boolean
                  description: >-
                    In case of a template a text/plain part will be added. In
                    case of a disclaimer the plain text will be added to the
                    text/plain part if the mail has one.
                  default: true
                addEmptyParts:
                  type: boolean
                  description: >-
                    if a text/html or text/plain part in the mail is missing but
                    the disclaimer has data for it, add it.
                  default: false
                forceUTF8:
                  type: boolean
                  description: Transform all manipulated parts into UTF-8
                  default: false
                text:
                  type: string
                  description: >-
                    If empty then SEPPmail's default plain text for templates
                    will be used
                html:
                  type: string
                  description: >-
                    If empty then SEPPmail's default html text for templates
                    will be used
                inlines:
                  type: array
                  description: Object holding inline or attachment data for an add
                  items:
                    type: object
                    required:
                      - fileName
                      - fileData
                      - contentType
                    properties:
                      fileName:
                        type: string
                        description: String representing a name
                        example: Name
                      fileData:
                        type: string
                        format: byte
                      contentType:
                        type: string
                        description: content type e.g. image/jpeg
                      contentID:
                        type: string
                        description: content ID of an inline or attachment
                    example:
                      - fileName: logo.gif
                        fileData: >-
                          R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                        contentType: image/gif
                        contentID: logo
                  default: []
                attachments:
                  type: array
                  description: Object holding inline or attachment data for an add
                  items:
                    type: object
                    required:
                      - fileName
                      - fileData
                      - contentType
                    properties:
                      fileName:
                        type: string
                        description: String representing a name
                        example: Name
                      fileData:
                        type: string
                        format: byte
                      contentType:
                        type: string
                        description: content type e.g. image/jpeg
                      contentID:
                        type: string
                        description: content ID of an inline or attachment
                    example:
                      - fileName: logo.gif
                        fileData: >-
                          R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                        contentType: image/gif
                        contentID: logo
                  default: []
              example:
                disclaimerName: Disclaimer_Name
                addHTMLPart: true
                forceUTF8: true
                html: >-
                  <b>templat's HTML content</b><br><img src="cid:logo2"
                  alt="logo2.gif" width="100%">
                inlines:
                  - fileName: logo2.gif
                    fileData: >-
                      R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                    contentType: image/gif
                    contentID: logo2
                attachments:
                  - fileName: logo.gif
                    fileData: >-
                      R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                    contentType: image/gif
                    contentID: logo
            example:
              disclaimerName: Disclaimer_Name
              addHTMLPart: true
              addTextPart: false
              forceUTF8: false
              addEmptyParts: true
              html: >-
                <b>disclaimer's HTML content</b><br><img src="cid:logo2"
                alt="logo2.gif" width="100%">
              text: disclaimer's test content
              inlines:
                - fileName: logo2.gif
                  fileData: >-
                    R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                  contentType: image/gif
                  contentID: logo2
              attachments:
                - fileName: logo.gif
                  fileData: >-
                    R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                  contentType: image/gif
                  contentID: logo
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    delete:
      tags:
        - mail system / disclaimer
      summary: Delete a disclaimer
      description: >-
        With this DELETE request you can delete a disclaimer and remove its
        usage from all policies and managed domains. It meight be nececcars to
        regenerate the ruleset afterwards.
      operationId: mailsystem_disclaimer_name_delete
      x-mojo-to:
        - 'RestAPI::Mailsystem::Template#api_delete'
        - templateType: disclaimer
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/mailsystem/disclaimer/{name}/{includesType}':
    parameters:
      - name: name
        in: path
        description: specifies the template's name
        allowEmptyValue: false
        style: simple
        required: true
        schema:
          type: string
          pattern: '^[^\s#]*$'
        example: templateName
      - name: includesType
        in: path
        description: specifies the includes type
        allowEmptyValue: false
        style: simple
        required: true
        schema:
          type: string
          description: type of an include
          enum:
            - inline
            - attachment
        example: inline
    get:
      tags:
        - mail system / disclaimer
      summary: Get data of disclaimer's includes
      description: >-
        With this GET request you can get the data the includes of a configured
        disclaimers.
      operationId: mailsystem_disclaimer_name_includes_get
      x-mojo-to:
        - 'RestAPI::Mailsystem::Template#api_get_includes'
        - templateType: disclaimer
      parameters:
        - in: query
          name: list
          required: false
          schema:
            type: boolean
            default: false
          description: 'if true, return an array of names instead of detailed information'
        - name: withData
          in: query
          description: >-
            if true the binary data (base64 encoded) of inlines and attachments
            will be returned
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: A JSON object holding the data of a list of includes
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    description: Object holding inline or attachment data
                    items:
                      type: object
                      properties:
                        fileName:
                          type: string
                          description: String representing a name
                          example: Name
                        fileData:
                          type: string
                          format: byte
                        contentType:
                          type: string
                          description: content type e.g. image/jpeg
                        contentID:
                          type: string
                          description: content ID of an inline or attachment
                      example:
                        - fileName: logo.gif
                          fileData: >-
                            R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                          contentType: image/gif
                          contentID: logo
                  - type: array
                    items:
                      type: string
                      description: String representing a name
                      example: Name
                    example:
                      - Name
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    post:
      tags:
        - mail system / disclaimer
      summary: Add an inline/attachment to the disclaimer
      description: >-
        With this POST request you can add an inline/attachment to the
        disclaimer.
      operationId: mailsystem_disclaimer_name_includes_add
      x-mojo-to:
        - 'RestAPI::Mailsystem::Template#api_add_delete_includes'
        - operation: add
          templateType: disclaimer
      requestBody:
        required: true
        description: an array of objects holding inline or attachment data
        content:
          application/json:
            schema:
              type: array
              description: Object holding inline or attachment data for an add
              items:
                type: object
                required:
                  - fileName
                  - fileData
                  - contentType
                properties:
                  fileName:
                    type: string
                    description: String representing a name
                    example: Name
                  fileData:
                    type: string
                    format: byte
                  contentType:
                    type: string
                    description: content type e.g. image/jpeg
                  contentID:
                    type: string
                    description: content ID of an inline or attachment
                example:
                  - fileName: logo.gif
                    fileData: >-
                      R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                    contentType: image/gif
                    contentID: logo
            example:
              - fileName: logo.gif
                fileData: >-
                  R0lGODlhQABAAIABAP8AAPOZACH+EUNyZWF0ZWQgd2l0aCBHSU1QACwAAAAAQABAAAACjYyPqcvtD6OctNqLs968+w+G4kiW5omm6sq27tsC8kzX8FHnOvDufr76CW2noZFmOiplpKVT5HyCotEpdfm5Vjta6abr1YCxnLGSazai08I1e+d5/+Jyn7tO/OJ19z2zv0fnN5M1+AcoF2IIFTjS6JiYxJaSxgLWs3UTcKTZ6fkJGio6SlpqeoqaqppaAAA7
                contentType: image/gif
                contentID: logo
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    put:
      tags:
        - mail system / disclaimer
      summary: Delete an inline/attachment from the disclaimer
      description: >-
        With this PUT request you can delete an inline/attachment from the
        disclaimer.
      operationId: mailsystem_disclaimer_name_includes_delete
      x-mojo-to:
        - 'RestAPI::Mailsystem::Template#api_add_delete_includes'
        - operation: delete
          templateType: disclaimer
      requestBody:
        required: true
        description: an array of file names to delete
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: String representing a name
                example: Name
              example:
                - Name
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  /mailsystem/manageddomain:
    get:
      tags:
        - mail system / managed domain
      summary: Get data of a managed domain
      description: With this GET request you can get data of a managed domain.
      operationId: mailsystem_manageddomain_get
      x-mojo-to: 'RestAPI::Mailsystem::Domain#api_get'
      parameters:
        - in: query
          name: list
          required: false
          schema:
            type: boolean
            default: false
          description: 'if true, return an array of names instead of detailed information'
        - name: domainName
          in: query
          description: limit output to a specific domain name
          allowEmptyValue: false
          required: false
          schema:
            type: string
            description: String representing a domain name
            pattern: '^((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
            example: domain.com
          example: domain.com
        - name: customer
          in: query
          description: limit output to a specific customer
          allowEmptyValue: false
          required: false
          schema:
            type: string
            title: Customer name scheme
            pattern: '^[a-zA-Z0-9\-_]+$|^\[(default|none)\]$'
            example: CustomerName
          example: CustomerName
      responses:
        '200':
          description: A JSON object holding the data of a managed domain
          content:
            application/json:
              schema:
                type: object
                title: Get managed domain response object.
                description: >-
                  This object will hold a hash with customer names as keys and
                  values, which are either a list of managed domain names or
                  objects holding all values/information about a managed domain
                additionalProperties:
                  oneOf:
                    - type: array
                      items:
                        title: Get managed domain object.
                        allOf:
                          - type: object
                            properties:
                              forwarding:
                                type: object
                                required:
                                  - host
                                properties:
                                  host:
                                    anyOf:
                                      - type: string
                                        format: ipv4
                                      - type: string
                                        format: ipv6
                                      - type: string
                                        format: hostname
                                  port:
                                    type: integer
                                    minimum: 0
                                    maximum: 65535
                                  noMXLookup:
                                    type: boolean
                              requestedHeader:
                                type: string
                                pattern: '^.+:.+$'
                              requestedTenantID:
                                type: string
                                description: TenantID as a GUID
                                format: uuid
                                example: 936DA01F-9ABD-4D9D-80C7-02AF85C822A8
                              authenticationExpression:
                                type: object
                                properties:
                                  mail:
                                    type: string
                                    format: regex
                                    description: a string holding a regular expression.
                                    example: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
                                  cert:
                                    type: string
                                    format: regex
                                    description: a string holding a regular expression.
                                    example: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
                              sendingServers:
                                type: array
                                items:
                                  oneOf:
                                    - type: object
                                      required:
                                        - ip
                                        - netmask
                                      properties:
                                        ip:
                                          type: string
                                          format: ipv4
                                        netmask:
                                          type: integer
                                          minimum: 0
                                          maximum: 32
                                    - type: object
                                      required:
                                        - ip
                                        - prefix
                                      properties:
                                        ip:
                                          type: string
                                          format: ipv6
                                        prefix:
                                          type: integer
                                          minimum: 0
                                          maximum: 128
                              smarthost:
                                type: object
                                required:
                                  - host
                                properties:
                                  host:
                                    anyOf:
                                      - type: string
                                        format: ipv4
                                      - type: string
                                        format: ipv6
                                      - type: string
                                        format: hostname
                                  port:
                                    type: integer
                                    minimum: 0
                                    maximum: 65535
                                  noMXLookup:
                                    type: boolean
                              postmaster:
                                type: string
                                format: email
                                example: john.doe@domain.com
                              webmailDomain:
                                type: string
                                description: String representing a name of a webdomain
                                pattern: '[^\&\$\!\;\\\<\>\(\)\*]'
                              disclaimer:
                                type: object
                                properties:
                                  initial:
                                    type: string
                                    pattern: '^[^\s#]*$'
                                  reply:
                                    type: string
                                    pattern: '^[^\s#]*$'
                              templates:
                                type: object
                                properties:
                                  bounce_noauth:
                                    type: string
                                    pattern: '^[^\s#]*$'
                                  bounce_noenc:
                                    type: string
                                    pattern: '^[^\s#]*$'
                                  bounce_noseckey:
                                    type: string
                                    pattern: '^[^\s#]*$'
                                  bounce_policy:
                                    type: string
                                    pattern: '^[^\s#]*$'
                                  sendpgpkeys:
                                    type: string
                                    pattern: '^[^\s#]*$'
                              externalAuthentication:
                                type: object
                                properties:
                                  ldap:
                                    type: object
                                    properties:
                                      enabled:
                                        type: boolean
                                      createAccount:
                                        type: boolean
                                      server:
                                        type: array
                                        items:
                                          anyOf:
                                            - type: string
                                              format: ipv4
                                            - type: string
                                              format: ipv6
                                            - type: string
                                              format: hostname
                                      port:
                                        type: integer
                                        minimum: 0
                                        maximum: 65535
                                      tls:
                                        type: boolean
                                      bindDN:
                                        type: string
                                      bindPassword:
                                        type: string
                                      objectClass:
                                        type: string
                                      mailAttribute:
                                        type: string
                                      searchBase:
                                        type: string
                              dkim:
                                type: object
                                properties:
                                  enabled:
                                    type: boolean
                                  privateKey:
                                    type: string
                                  publicKey:
                                    type: string
                              tls:
                                type: object
                                properties:
                                  level:
                                    type: string
                                    enum:
                                      - none
                                      - may
                                      - encrypt
                                      - verify
                                      - secure
                                      - fingerprint
                                  fingerprints:
                                    type: array
                                    items:
                                      type: string
                                      pattern: '^[a-fA-F0-9]{2}(:[a-fA-F0-9]{2})*$'
                          - type: object
                            required:
                              - domainName
                            properties:
                              domainName:
                                type: string
                                description: String representing a domain name
                                pattern: >-
                                  ^((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$
                                example: domain.com
                              autopublishSMIMEDomainKeys:
                                type: string
                                enum:
                                  - 'on'
                                  - 'off'
                                  - globally on
                                  - globally off
                    - type: array
                      items:
                        type: string
                        description: String representing a domain name
                        pattern: '^((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                        example: domain.com
                      example:
                        - domain1.com
                        - domain2.com
                example:
                  CustomerName1:
                    - domainName: domain1.com
                      forwarding:
                        host: host1.name
                        port: 1111
                  CustomerName2:
                    - domainName: domain2.com
                      forwarding:
                        host: host2.name
                        port: 2222
              examples:
                list:
                  value:
                    CustomerName1:
                      - customername1domain1.com
                      - customername1domain2.com
                    CustomerName2:
                      - customername2domain1.com
                      - customername2domain2.com
                object:
                  value:
                    CustomerName1:
                      - domainName: customername1domain1.com
                        forwarding:
                          host: c1host1.name
                          noMXLookup: true
                          port: 1111
                        requestedheader: 'header:value'
                        postmaster: admin@customername1domain1.om
                      - domainName: customername1domain2.com
                        forwarding:
                          host: c2host2.name
                        sendingServers:
                          - ip: 10.20.30.0
                            netmask: 24
                          - ip: '2001:0db8:1234::'
                            prefix: 48
                        authenticationExpression:
                          mail: .*@.*
                    CustomerName2:
                      - domainName: customername2domain1.com
                        forwarding:
                          host: c2host1.name
                        requestedTenantID: 936DA01F-9ABD-4D9D-80C7-02AF85C822A8
                        autopublishSMIMEDomainKeys: 'on'
                      - domainName: customername2domain2.com
                        forwarding:
                          host: c2host2.name
                          port: 2222
                        smarthost:
                          host: mail.smart
                          noMXLookup: true
                          port: 587
                        webmailDomain: '[default]'
                        disclaimer:
                          reply: '-NONE-'
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    post:
      tags:
        - mail system / managed domain
      summary: Add a new managed domain.
      description: With this POST request you can add a new managed domain.
      operationId: mailsystem_manageddomain_add
      x-mojo-to: 'RestAPI::Mailsystem::Domain#api_add'
      parameters:
        - name: applyMailconfig
          in: query
          description: >-
            If true (default) the mail configuration is applied. Otherwise only
            the data are added, modified or deleted.
          required: false
          schema:
            type: boolean
            default: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Add managed domain object.
              allOf:
                - type: object
                  properties:
                    forwarding:
                      type: object
                      required:
                        - host
                      properties:
                        host:
                          anyOf:
                            - type: string
                              format: ipv4
                            - type: string
                              format: ipv6
                            - type: string
                              format: hostname
                        port:
                          type: integer
                          minimum: 0
                          maximum: 65535
                        noMXLookup:
                          type: boolean
                    requestedHeader:
                      type: string
                      pattern: '^.+:.+$'
                    requestedTenantID:
                      type: string
                      description: TenantID as a GUID
                      format: uuid
                      example: 936DA01F-9ABD-4D9D-80C7-02AF85C822A8
                    authenticationExpression:
                      type: object
                      properties:
                        mail:
                          type: string
                          format: regex
                          description: a string holding a regular expression.
                          example: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
                        cert:
                          type: string
                          format: regex
                          description: a string holding a regular expression.
                          example: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
                    sendingServers:
                      type: array
                      items:
                        oneOf:
                          - type: object
                            required:
                              - ip
                              - netmask
                            properties:
                              ip:
                                type: string
                                format: ipv4
                              netmask:
                                type: integer
                                minimum: 0
                                maximum: 32
                          - type: object
                            required:
                              - ip
                              - prefix
                            properties:
                              ip:
                                type: string
                                format: ipv6
                              prefix:
                                type: integer
                                minimum: 0
                                maximum: 128
                    smarthost:
                      type: object
                      required:
                        - host
                      properties:
                        host:
                          anyOf:
                            - type: string
                              format: ipv4
                            - type: string
                              format: ipv6
                            - type: string
                              format: hostname
                        port:
                          type: integer
                          minimum: 0
                          maximum: 65535
                        noMXLookup:
                          type: boolean
                    postmaster:
                      type: string
                      format: email
                      example: john.doe@domain.com
                    webmailDomain:
                      type: string
                      description: String representing a name of a webdomain
                      pattern: '[^\&\$\!\;\\\<\>\(\)\*]'
                    disclaimer:
                      type: object
                      properties:
                        initial:
                          type: string
                          pattern: '^[^\s#]*$'
                        reply:
                          type: string
                          pattern: '^[^\s#]*$'
                    templates:
                      type: object
                      properties:
                        bounce_noauth:
                          type: string
                          pattern: '^[^\s#]*$'
                        bounce_noenc:
                          type: string
                          pattern: '^[^\s#]*$'
                        bounce_noseckey:
                          type: string
                          pattern: '^[^\s#]*$'
                        bounce_policy:
                          type: string
                          pattern: '^[^\s#]*$'
                        sendpgpkeys:
                          type: string
                          pattern: '^[^\s#]*$'
                    externalAuthentication:
                      type: object
                      properties:
                        ldap:
                          type: object
                          properties:
                            enabled:
                              type: boolean
                            createAccount:
                              type: boolean
                            server:
                              type: array
                              items:
                                anyOf:
                                  - type: string
                                    format: ipv4
                                  - type: string
                                    format: ipv6
                                  - type: string
                                    format: hostname
                            port:
                              type: integer
                              minimum: 0
                              maximum: 65535
                            tls:
                              type: boolean
                            bindDN:
                              type: string
                            bindPassword:
                              type: string
                            objectClass:
                              type: string
                            mailAttribute:
                              type: string
                            searchBase:
                              type: string
                    dkim:
                      type: object
                      properties:
                        enabled:
                          type: boolean
                        privateKey:
                          type: string
                        publicKey:
                          type: string
                    tls:
                      type: object
                      properties:
                        level:
                          type: string
                          enum:
                            - none
                            - may
                            - encrypt
                            - verify
                            - secure
                            - fingerprint
                        fingerprints:
                          type: array
                          items:
                            type: string
                            pattern: '^[a-fA-F0-9]{2}(:[a-fA-F0-9]{2})*$'
                - type: object
                  required:
                    - domainName
                  properties:
                    domainName:
                      type: string
                      description: String representing a domain name
                      pattern: '^((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                      example: domain.com
                    autopublishSMIMEDomainKeys:
                      type: string
                      enum:
                        - 'on'
                        - 'off'
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/mailsystem/manageddomain/{domainName}':
    parameters:
      - name: domainName
        in: path
        description: limit output to a specific domain name
        allowEmptyValue: false
        style: simple
        required: true
        x-mojo-placeholder: '#'
        schema:
          type: string
          description: String representing a domain name
          pattern: '^((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
          example: domain.com
        example: domain.com
      - name: applyMailconfig
        in: query
        description: >-
          If true (default) the mail configuration is applied. Otherwise only
          the data are added, modified or deleted.
        required: false
        schema:
          type: boolean
          default: true
    put:
      tags:
        - mail system / managed domain
      summary: Modify a managed domain.
      description: With this PUT request you can modify a managed domain.
      operationId: mailsystem_manageddomain_name_modify
      x-mojo-to: 'RestAPI::Mailsystem::Domain#api_modify'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Modify managed domain object.
              allOf:
                - type: object
                  properties:
                    forwarding:
                      type: object
                      required:
                        - host
                      properties:
                        host:
                          anyOf:
                            - type: string
                              format: ipv4
                            - type: string
                              format: ipv6
                            - type: string
                              format: hostname
                        port:
                          type: integer
                          minimum: 0
                          maximum: 65535
                        noMXLookup:
                          type: boolean
                    requestedHeader:
                      type: string
                      pattern: '^.+:.+$'
                    requestedTenantID:
                      type: string
                      description: TenantID as a GUID
                      format: uuid
                      example: 936DA01F-9ABD-4D9D-80C7-02AF85C822A8
                    authenticationExpression:
                      type: object
                      properties:
                        mail:
                          type: string
                          format: regex
                          description: a string holding a regular expression.
                          example: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
                        cert:
                          type: string
                          format: regex
                          description: a string holding a regular expression.
                          example: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
                    sendingServers:
                      type: array
                      items:
                        oneOf:
                          - type: object
                            required:
                              - ip
                              - netmask
                            properties:
                              ip:
                                type: string
                                format: ipv4
                              netmask:
                                type: integer
                                minimum: 0
                                maximum: 32
                          - type: object
                            required:
                              - ip
                              - prefix
                            properties:
                              ip:
                                type: string
                                format: ipv6
                              prefix:
                                type: integer
                                minimum: 0
                                maximum: 128
                    smarthost:
                      type: object
                      required:
                        - host
                      properties:
                        host:
                          anyOf:
                            - type: string
                              format: ipv4
                            - type: string
                              format: ipv6
                            - type: string
                              format: hostname
                        port:
                          type: integer
                          minimum: 0
                          maximum: 65535
                        noMXLookup:
                          type: boolean
                    postmaster:
                      type: string
                      format: email
                      example: john.doe@domain.com
                    webmailDomain:
                      type: string
                      description: String representing a name of a webdomain
                      pattern: '[^\&\$\!\;\\\<\>\(\)\*]'
                    disclaimer:
                      type: object
                      properties:
                        initial:
                          type: string
                          pattern: '^[^\s#]*$'
                        reply:
                          type: string
                          pattern: '^[^\s#]*$'
                    templates:
                      type: object
                      properties:
                        bounce_noauth:
                          type: string
                          pattern: '^[^\s#]*$'
                        bounce_noenc:
                          type: string
                          pattern: '^[^\s#]*$'
                        bounce_noseckey:
                          type: string
                          pattern: '^[^\s#]*$'
                        bounce_policy:
                          type: string
                          pattern: '^[^\s#]*$'
                        sendpgpkeys:
                          type: string
                          pattern: '^[^\s#]*$'
                    externalAuthentication:
                      type: object
                      properties:
                        ldap:
                          type: object
                          properties:
                            enabled:
                              type: boolean
                            createAccount:
                              type: boolean
                            server:
                              type: array
                              items:
                                anyOf:
                                  - type: string
                                    format: ipv4
                                  - type: string
                                    format: ipv6
                                  - type: string
                                    format: hostname
                            port:
                              type: integer
                              minimum: 0
                              maximum: 65535
                            tls:
                              type: boolean
                            bindDN:
                              type: string
                            bindPassword:
                              type: string
                            objectClass:
                              type: string
                            mailAttribute:
                              type: string
                            searchBase:
                              type: string
                    dkim:
                      type: object
                      properties:
                        enabled:
                          type: boolean
                        privateKey:
                          type: string
                        publicKey:
                          type: string
                    tls:
                      type: object
                      properties:
                        level:
                          type: string
                          enum:
                            - none
                            - may
                            - encrypt
                            - verify
                            - secure
                            - fingerprint
                        fingerprints:
                          type: array
                          items:
                            type: string
                            pattern: '^[a-fA-F0-9]{2}(:[a-fA-F0-9]{2})*$'
                - type: object
                  properties:
                    autopublishSMIMEDomainKeys:
                      type: string
                      enum:
                        - 'on'
                        - 'off'
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    delete:
      tags:
        - mail system / managed domain
      summary: Delete a managed domain
      description: >-
        With this DELETE request you can delete a managed domain and all
        keys/certificates assigned to this domain.
      operationId: mailsystem_manageddomain_name_delete
      x-mojo-to: 'RestAPI::Mailsystem::Domain#api_delete'
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  /info/encryption:
    get:
      tags:
        - info
      summary: Get information about encryption options
      description: >-
        With this GET request you can get information about the encryption
        options you have for all users. You can limit the result to a specific
        email address by using the email parameter.
      operationId: info_encryption_get
      x-mojo-to: 'RestAPI::Info::Encryption#api_get'
      parameters:
        - name: email
          in: query
          description: limit output to a specific e-Mail address
          allowEmptyValue: false
          required: false
          schema:
            type: string
            format: email
            example: john.doe@domain.com
          example: john.doe@domain.com
      responses:
        '200':
          description: A JSON object holding the encryption information
          content:
            application/json:
              schema:
                type: object
                title: Get encryption infor object
                properties:
                  smime:
                    type: object
                    properties:
                      personal:
                        type: array
                        items:
                          type: object
                          properties:
                            email:
                              type: string
                              format: email
                              example: john.doe@domain.com
                            status:
                              type: string
                              description: >-
                                info about the status of an webmail user's
                                account
                              enum:
                                - enabled
                                - locked by admin
                                - locked temporarily
                      domain:
                        type: array
                        items:
                          type: object
                          properties:
                            domain:
                              type: string
                            tls:
                              type: string
                              enum:
                                - none
                                - may
                                - encrypt
                                - verify
                                - secure
                                - fingerprint
                  pgp:
                    type: object
                    properties:
                      personal:
                        type: array
                        items:
                          type: object
                          properties:
                            email:
                              type: string
                              format: email
                              example: john.doe@domain.com
                            status:
                              type: string
                              description: >-
                                info about the status of an webmail user's
                                account
                              enum:
                                - enabled
                                - locked by admin
                                - locked temporarily
                      domain:
                        type: array
                        items:
                          type: object
                          properties:
                            domain:
                              type: string
                            tls:
                              type: string
                              enum:
                                - none
                                - may
                                - encrypt
                                - verify
                                - secure
                                - fingerprint
                  hin:
                    type: object
                    properties:
                      domain:
                        type: array
                        items:
                          type: object
                          properties:
                            domain:
                              type: string
                            tls:
                              type: string
                              enum:
                                - none
                                - may
                                - encrypt
                                - verify
                                - secure
                                - fingerprint
                  tls:
                    type: object
                    properties:
                      domain:
                        type: array
                        items:
                          type: object
                          properties:
                            domain:
                              type: string
                            tls:
                              type: string
                              enum:
                                - none
                                - may
                                - encrypt
                                - verify
                                - secure
                                - fingerprint
                  gina:
                    type: object
                    properties:
                      personal:
                        type: array
                        items:
                          type: object
                          properties:
                            email:
                              type: string
                              format: email
                              example: john.doe@domain.com
                            status:
                              type: string
                              description: >-
                                info about the status of an webmail user's
                                account
                              enum:
                                - enabled
                                - locked by admin
                                - locked temporarily
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/info/encryption/{encryptionMode}':
    parameters:
      - name: encryptionMode
        in: path
        description: specifies the encryption mode
        allowEmptyValue: false
        style: simple
        required: true
        schema:
          type: string
          description: encryption mode
          enum:
            - smime
            - pgp
            - hin
            - tls
            - webmail
        example: SMIME
    get:
      tags:
        - info
      summary: Get information about encryption options for a specific mode
      description: >-
        With this GET request you can get information about the encryption
        options you have for a specific mode for all users. You can limit the
        result to a specific email address by using the email parameter.
      operationId: info_encryption_mode_get
      x-mojo-to: 'RestAPI::Info::Encryption#api_get'
      parameters:
        - name: email
          in: query
          description: limit output to a specific e-Mail address
          allowEmptyValue: false
          required: false
          schema:
            type: string
            format: email
            example: john.doe@domain.com
          example: john.doe@domain.com
      responses:
        '200':
          description: A JSON object holding the encryption information
          content:
            application/json:
              schema:
                type: object
                title: Get encryption infor object
                properties:
                  smime:
                    type: object
                    properties:
                      personal:
                        type: array
                        items:
                          type: object
                          properties:
                            email:
                              type: string
                              format: email
                              example: john.doe@domain.com
                            status:
                              type: string
                              description: >-
                                info about the status of an webmail user's
                                account
                              enum:
                                - enabled
                                - locked by admin
                                - locked temporarily
                      domain:
                        type: array
                        items:
                          type: object
                          properties:
                            domain:
                              type: string
                            tls:
                              type: string
                              enum:
                                - none
                                - may
                                - encrypt
                                - verify
                                - secure
                                - fingerprint
                  pgp:
                    type: object
                    properties:
                      personal:
                        type: array
                        items:
                          type: object
                          properties:
                            email:
                              type: string
                              format: email
                              example: john.doe@domain.com
                            status:
                              type: string
                              description: >-
                                info about the status of an webmail user's
                                account
                              enum:
                                - enabled
                                - locked by admin
                                - locked temporarily
                      domain:
                        type: array
                        items:
                          type: object
                          properties:
                            domain:
                              type: string
                            tls:
                              type: string
                              enum:
                                - none
                                - may
                                - encrypt
                                - verify
                                - secure
                                - fingerprint
                  hin:
                    type: object
                    properties:
                      domain:
                        type: array
                        items:
                          type: object
                          properties:
                            domain:
                              type: string
                            tls:
                              type: string
                              enum:
                                - none
                                - may
                                - encrypt
                                - verify
                                - secure
                                - fingerprint
                  tls:
                    type: object
                    properties:
                      domain:
                        type: array
                        items:
                          type: object
                          properties:
                            domain:
                              type: string
                            tls:
                              type: string
                              enum:
                                - none
                                - may
                                - encrypt
                                - verify
                                - secure
                                - fingerprint
                  gina:
                    type: object
                    properties:
                      personal:
                        type: array
                        items:
                          type: object
                          properties:
                            email:
                              type: string
                              format: email
                              example: john.doe@domain.com
                            status:
                              type: string
                              description: >-
                                info about the status of an webmail user's
                                account
                              enum:
                                - enabled
                                - locked by admin
                                - locked temporarily
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/info/encryption/{encryptionMode}/{encryptionRange}':
    parameters:
      - name: encryptionMode
        in: path
        description: specifies the encryption mode
        allowEmptyValue: false
        style: simple
        required: true
        schema:
          type: string
          description: encryption mode
          enum:
            - smime
            - pgp
            - hin
            - tls
            - webmail
        example: SMIME
      - name: encryptionRange
        in: path
        description: specifies the encryption range
        allowEmptyValue: false
        style: simple
        required: true
        schema:
          type: string
          description: >-
            encryption range. 'personal' is not valid for the modes 'hin' and
            'tls'. 'domain' is not valid for mode 'webmail'.
          enum:
            - personal
            - domain
        example: personal
    get:
      tags:
        - info
      summary: Get information about encryption options for a specific mode and range
      description: >-
        With this GET request you can get information about the encryption
        options you have for a specific mode and range for all users. You can
        limit the result to a specific email address by using the email
        parameter.
      operationId: info_encryption_mode_range_get
      x-mojo-to: 'RestAPI::Info::Encryption#api_get'
      parameters:
        - name: email
          in: query
          description: limit output to a specific e-Mail address
          allowEmptyValue: false
          required: false
          schema:
            type: string
            format: email
            example: john.doe@domain.com
          example: john.doe@domain.com
      responses:
        '200':
          description: A JSON object holding the encryption information
          content:
            application/json:
              schema:
                type: object
                title: Get encryption infor object
                properties:
                  smime:
                    type: object
                    properties:
                      personal:
                        type: array
                        items:
                          type: object
                          properties:
                            email:
                              type: string
                              format: email
                              example: john.doe@domain.com
                            status:
                              type: string
                              description: >-
                                info about the status of an webmail user's
                                account
                              enum:
                                - enabled
                                - locked by admin
                                - locked temporarily
                      domain:
                        type: array
                        items:
                          type: object
                          properties:
                            domain:
                              type: string
                            tls:
                              type: string
                              enum:
                                - none
                                - may
                                - encrypt
                                - verify
                                - secure
                                - fingerprint
                  pgp:
                    type: object
                    properties:
                      personal:
                        type: array
                        items:
                          type: object
                          properties:
                            email:
                              type: string
                              format: email
                              example: john.doe@domain.com
                            status:
                              type: string
                              description: >-
                                info about the status of an webmail user's
                                account
                              enum:
                                - enabled
                                - locked by admin
                                - locked temporarily
                      domain:
                        type: array
                        items:
                          type: object
                          properties:
                            domain:
                              type: string
                            tls:
                              type: string
                              enum:
                                - none
                                - may
                                - encrypt
                                - verify
                                - secure
                                - fingerprint
                  hin:
                    type: object
                    properties:
                      domain:
                        type: array
                        items:
                          type: object
                          properties:
                            domain:
                              type: string
                            tls:
                              type: string
                              enum:
                                - none
                                - may
                                - encrypt
                                - verify
                                - secure
                                - fingerprint
                  tls:
                    type: object
                    properties:
                      domain:
                        type: array
                        items:
                          type: object
                          properties:
                            domain:
                              type: string
                            tls:
                              type: string
                              enum:
                                - none
                                - may
                                - encrypt
                                - verify
                                - secure
                                - fingerprint
                  gina:
                    type: object
                    properties:
                      personal:
                        type: array
                        items:
                          type: object
                          properties:
                            email:
                              type: string
                              format: email
                              example: john.doe@domain.com
                            status:
                              type: string
                              description: >-
                                info about the status of an webmail user's
                                account
                              enum:
                                - enabled
                                - locked by admin
                                - locked temporarily
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  /filter/config/:
    get:
      tags:
        - filter / config
      summary: Get filter scope configurations
      description: With this GET request you can get filter scope configurations.
      operationId: filter_config_get
      x-mojo-to: 'RestAPI::Filter::Config#api_get'
      parameters:
        - in: query
          name: list
          required: false
          schema:
            type: boolean
            default: false
          description: 'if true, return an array of names instead of detailed information'
        - name: scope
          in: query
          description: limit output to a specified scope
          allowEmptyValue: false
          required: false
          schema:
            type: string
            oneOf:
              - type: string
                pattern: ^\$GLOBAL$
                example: $GLOBAL
              - type: string
                pattern: '^%((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                example: '%domain.com'
              - type: string
                format: email
                example: jane.doe@domain.com
          example: jane.doe@domain.com
      responses:
        '200':
          description: A JSON object holding the information about filter config scopes
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: Get filter config object scheme
                    additionalProperties:
                      type: object
                      title: section
                      additionalProperties:
                        type: object
                        title: option
                        additionalProperties:
                          type: string
                  - type: array
                    items:
                      type: string
                      oneOf:
                        - type: string
                          pattern: ^\$GLOBAL$
                          example: $GLOBAL
                        - type: string
                          pattern: '^%((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                          example: '%domain.com'
                        - type: string
                          format: email
                          example: jane.doe@domain.com
                    example:
                      - john.doe@domain.com
                      - $GLOBAL
                      - '%domain.com'
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    post:
      tags:
        - filter / config
      summary: Add a new filter scope configuration.
      description: Adds a new filter scope configuration
      operationId: filter_config_add
      x-mojo-to: 'RestAPI::Filter::Config#api_add'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scope:
                  type: string
                  oneOf:
                    - type: string
                      pattern: ^\$GLOBAL$
                      example: $GLOBAL
                    - type: string
                      pattern: '^%((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                      example: '%domain.com'
                    - type: string
                      format: email
                      example: jane.doe@domain.com
                config:
                  type: object
                  example:
                    sectionName1:
                      objectName1: value1
                      objectName2: value2
                    sectionName2:
                      objectName1: value1
                      objectName2: value2
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/filter/config/{scope}':
    parameters:
      - name: scope
        in: path
        description: limit output to a specified scope
        allowEmptyValue: false
        style: simple
        required: true
        x-mojo-placeholder: '#'
        schema:
          type: string
          oneOf:
            - type: string
              pattern: ^\$GLOBAL$
              example: $GLOBAL
            - type: string
              pattern: '^%((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
              example: '%domain.com'
            - type: string
              format: email
              example: jane.doe@domain.com
        example: $GLOBAL
    get:
      tags:
        - filter / config
      summary: Get configuration of a filter scope
      description: With this GET request you can get the configuration of a filter scope.
      operationId: filter_config_scope_get
      x-mojo-to:
        - 'RestAPI::Filter::Config#api_get'
        - list: false
      responses:
        '200':
          description: A JSON object holding the information about a filter config scope
          content:
            application/json:
              schema:
                type: object
                title: Get filter config object scheme
                additionalProperties:
                  type: object
                  title: section
                  additionalProperties:
                    type: object
                    title: option
                    additionalProperties:
                      type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    put:
      tags:
        - filter / config
      summary: Modify a filter config
      description: >-
        With this PUT request you can change a filter config for a scope. Only
        specified values will be changed.
      operationId: filter_config_scope_modify
      x-mojo-to: 'RestAPI::Filter::Config#api_modify'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - config
              properties:
                config:
                  type: object
                  example:
                    sectionName1:
                      objectName1: value1
                      objectName2: value2
                    sectionName2:
                      objectName1: value1
                      objectName2: value2
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    delete:
      tags:
        - filter / config
      summary: Delete a filter config
      description: With this DELETE request you can delete a filter config scope.
      operationId: filter_config_scope_delete
      x-mojo-to: 'RestAPI::Filter::Config#api_delete'
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  /filter/blwl/:
    get:
      tags:
        - filter / blwl
      summary: Get filter black- and whitelisting
      description: With this GET request you can get filter black- and whitelistings.
      operationId: filter_blwl_get
      x-mojo-to: 'RestAPI::Filter::BlackWhiteListing#api_get'
      parameters:
        - in: query
          name: list
          required: false
          schema:
            type: boolean
            default: false
          description: 'if true, return an array of names instead of detailed information'
        - name: scope
          in: query
          description: limit output to a specified scope
          allowEmptyValue: false
          required: false
          schema:
            type: string
            oneOf:
              - type: string
                pattern: ^\$GLOBAL$
                example: $GLOBAL
              - type: string
                pattern: '^%((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                example: '%domain.com'
              - type: string
                format: email
                example: jane.doe@domain.com
          example: jane.doe@domain.com
        - name: listID
          in: query
          description: limit output to a specified filter list ID
          allowEmptyValue: false
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
          example: 42
        - name: listType
          in: query
          description: limit output to a specified filter list type
          allowEmptyValue: false
          required: false
          schema:
            type: string
            enum:
              - block
              - welcome
            default: block
          example: block
        - name: listScope
          in: query
          description: limit output to a specified filter list scope
          allowEmptyValue: false
          required: false
          schema:
            type: string
            description: >-
              any (apply listing to envelope sender and header), env (apply to
              envelope sender only), hdr (apply to headers only)
            enum:
              - any
              - env
              - hdr
            default: any
          example: any
        - name: senderAddress
          in: query
          description: limit output to a specified filter list address
          allowEmptyValue: false
          required: false
          schema:
            type: string
            nullable: true
            oneOf:
              - type: string
                nullable: true
                minLength: 0
                maxLength: 0
                description: String representing a null
              - type: string
                minLength: 0
                maxLength: 0
                default: ''
                description: An empty string
              - type: string
                pattern: '^\*\.((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                example: '*.domain.com'
              - type: string
                pattern: '^%((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                example: '%domain.com'
              - type: string
                format: email
                example: jane.doe@domain.com
            example: '%domain.com'
          example: jane.doe@domain.com
        - name: senderHost
          in: query
          description: limit output to a specified scope
          allowEmptyValue: false
          required: false
          schema:
            type: string
            nullable: true
            oneOf:
              - type: string
                nullable: true
                minLength: 0
                maxLength: 0
                description: String representing a null
              - anyOf:
                  - type: string
                    format: ipv4
                  - type: string
                    format: ipv6
                  - type: string
                    format: hostname
              - type: string
                pattern: '^\*\.((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                example: '*.domain.com'
            example: 10.20.30.40
          example: host.name
      responses:
        '200':
          description: A JSON object holding the information about filter list entries
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    title: Get filter list array scheme
                    items:
                      allOf:
                        - type: object
                          title: Filter list base object scheme
                          properties:
                            listType:
                              type: string
                              enum:
                                - block
                                - welcome
                              default: block
                            listScope:
                              type: string
                              description: >-
                                any (apply listing to envelope sender and
                                header), env (apply to envelope sender only),
                                hdr (apply to headers only)
                              enum:
                                - any
                                - env
                                - hdr
                              default: any
                            senderAddress:
                              type: string
                              nullable: true
                              oneOf:
                                - type: string
                                  nullable: true
                                  minLength: 0
                                  maxLength: 0
                                  description: String representing a null
                                - type: string
                                  minLength: 0
                                  maxLength: 0
                                  default: ''
                                  description: An empty string
                                - type: string
                                  pattern: >-
                                    ^\*\.((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$
                                  example: '*.domain.com'
                                - type: string
                                  pattern: >-
                                    ^%((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$
                                  example: '%domain.com'
                                - type: string
                                  format: email
                                  example: jane.doe@domain.com
                              example: '%domain.com'
                            senderHost:
                              type: string
                              nullable: true
                              oneOf:
                                - type: string
                                  nullable: true
                                  minLength: 0
                                  maxLength: 0
                                  description: String representing a null
                                - anyOf:
                                    - type: string
                                      format: ipv4
                                    - type: string
                                      format: ipv6
                                    - type: string
                                      format: hostname
                                - type: string
                                  pattern: >-
                                    ^\*\.((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$
                                  example: '*.domain.com'
                              example: 10.20.30.40
                            netmask:
                              type: integer
                              minimum: -1
                              example: 1
                            scope:
                              type: string
                              oneOf:
                                - type: string
                                  pattern: ^\$GLOBAL$
                                  example: $GLOBAL
                                - type: string
                                  pattern: >-
                                    ^%((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$
                                  example: '%domain.com'
                                - type: string
                                  format: email
                                  example: jane.doe@domain.com
                        - type: object
                          properties:
                            lasthit:
                              type: string
                              format: date-time
                            hitcount:
                              type: integer
                              example: 1
                        - type: object
                          properties:
                            listID:
                              type: integer
                              format: int64
                              minimum: 1
                  - type: array
                    items:
                      type: integer
                      format: int64
                      minimum: 1
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    post:
      tags:
        - filter / blwl
      summary: Add a new filter scope configuration.
      description: Adds a new filter scope configuration
      operationId: filter_blwl_add
      x-mojo-to: 'RestAPI::Filter::BlackWhiteListing#api_add'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - listType
                - listScope
                - senderAddress
                - senderHost
                - netmask
                - scope
              type: object
              title: Filter list base object scheme
              properties:
                listType:
                  type: string
                  enum:
                    - block
                    - welcome
                  default: block
                listScope:
                  type: string
                  description: >-
                    any (apply listing to envelope sender and header), env
                    (apply to envelope sender only), hdr (apply to headers only)
                  enum:
                    - any
                    - env
                    - hdr
                  default: any
                senderAddress:
                  type: string
                  nullable: true
                  oneOf:
                    - type: string
                      nullable: true
                      minLength: 0
                      maxLength: 0
                      description: String representing a null
                    - type: string
                      minLength: 0
                      maxLength: 0
                      default: ''
                      description: An empty string
                    - type: string
                      pattern: '^\*\.((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                      example: '*.domain.com'
                    - type: string
                      pattern: '^%((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                      example: '%domain.com'
                    - type: string
                      format: email
                      example: jane.doe@domain.com
                  example: '%domain.com'
                senderHost:
                  type: string
                  nullable: true
                  oneOf:
                    - type: string
                      nullable: true
                      minLength: 0
                      maxLength: 0
                      description: String representing a null
                    - anyOf:
                        - type: string
                          format: ipv4
                        - type: string
                          format: ipv6
                        - type: string
                          format: hostname
                    - type: string
                      pattern: '^\*\.((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                      example: '*.domain.com'
                  example: 10.20.30.40
                netmask:
                  type: integer
                  minimum: -1
                  example: 1
                scope:
                  type: string
                  oneOf:
                    - type: string
                      pattern: ^\$GLOBAL$
                      example: $GLOBAL
                    - type: string
                      pattern: '^%((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                      example: '%domain.com'
                    - type: string
                      format: email
                      example: jane.doe@domain.com
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
  '/filter/blwl/{listID}':
    parameters:
      - name: listID
        in: path
        description: limit output to a specified filter list ID
        allowEmptyValue: false
        style: simple
        required: true
        x-mojo-placeholder: '#'
        schema:
          type: integer
          format: int64
          minimum: 1
        example: 42
    get:
      tags:
        - filter / blwl
      summary: Get filter black- and whitelisting
      description: With this GET request you can get filter black- and whitelistings.
      operationId: filter_blwl_listid_get
      x-mojo-to: 'RestAPI::Filter::BlackWhiteListing#api_get'
      responses:
        '200':
          description: A JSON object holding the information about a filter list entry
          content:
            application/json:
              schema:
                type: array
                title: Get filter list array scheme
                items:
                  allOf:
                    - type: object
                      title: Filter list base object scheme
                      properties:
                        listType:
                          type: string
                          enum:
                            - block
                            - welcome
                          default: block
                        listScope:
                          type: string
                          description: >-
                            any (apply listing to envelope sender and header),
                            env (apply to envelope sender only), hdr (apply to
                            headers only)
                          enum:
                            - any
                            - env
                            - hdr
                          default: any
                        senderAddress:
                          type: string
                          nullable: true
                          oneOf:
                            - type: string
                              nullable: true
                              minLength: 0
                              maxLength: 0
                              description: String representing a null
                            - type: string
                              minLength: 0
                              maxLength: 0
                              default: ''
                              description: An empty string
                            - type: string
                              pattern: >-
                                ^\*\.((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$
                              example: '*.domain.com'
                            - type: string
                              pattern: >-
                                ^%((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$
                              example: '%domain.com'
                            - type: string
                              format: email
                              example: jane.doe@domain.com
                          example: '%domain.com'
                        senderHost:
                          type: string
                          nullable: true
                          oneOf:
                            - type: string
                              nullable: true
                              minLength: 0
                              maxLength: 0
                              description: String representing a null
                            - anyOf:
                                - type: string
                                  format: ipv4
                                - type: string
                                  format: ipv6
                                - type: string
                                  format: hostname
                            - type: string
                              pattern: >-
                                ^\*\.((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$
                              example: '*.domain.com'
                          example: 10.20.30.40
                        netmask:
                          type: integer
                          minimum: -1
                          example: 1
                        scope:
                          type: string
                          oneOf:
                            - type: string
                              pattern: ^\$GLOBAL$
                              example: $GLOBAL
                            - type: string
                              pattern: >-
                                ^%((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$
                              example: '%domain.com'
                            - type: string
                              format: email
                              example: jane.doe@domain.com
                    - type: object
                      properties:
                        lasthit:
                          type: string
                          format: date-time
                        hitcount:
                          type: integer
                          example: 1
                    - type: object
                      properties:
                        listID:
                          type: integer
                          format: int64
                          minimum: 1
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    put:
      tags:
        - filter / blwl
      summary: Modify a filter black-/whitelisting entry
      description: >-
        With this PUT request you can change a filter black-/whitelisting entry.
        Only specified values will be changed.
      operationId: filter_blwl_listid_modify
      x-mojo-to: 'RestAPI::Filter::BlackWhiteListing#api_modify'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  title: Filter list base object scheme
                  properties:
                    listType:
                      type: string
                      enum:
                        - block
                        - welcome
                      default: block
                    listScope:
                      type: string
                      description: >-
                        any (apply listing to envelope sender and header), env
                        (apply to envelope sender only), hdr (apply to headers
                        only)
                      enum:
                        - any
                        - env
                        - hdr
                      default: any
                    senderAddress:
                      type: string
                      nullable: true
                      oneOf:
                        - type: string
                          nullable: true
                          minLength: 0
                          maxLength: 0
                          description: String representing a null
                        - type: string
                          minLength: 0
                          maxLength: 0
                          default: ''
                          description: An empty string
                        - type: string
                          pattern: >-
                            ^\*\.((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$
                          example: '*.domain.com'
                        - type: string
                          pattern: '^%((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                          example: '%domain.com'
                        - type: string
                          format: email
                          example: jane.doe@domain.com
                      example: '%domain.com'
                    senderHost:
                      type: string
                      nullable: true
                      oneOf:
                        - type: string
                          nullable: true
                          minLength: 0
                          maxLength: 0
                          description: String representing a null
                        - anyOf:
                            - type: string
                              format: ipv4
                            - type: string
                              format: ipv6
                            - type: string
                              format: hostname
                        - type: string
                          pattern: >-
                            ^\*\.((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$
                          example: '*.domain.com'
                      example: 10.20.30.40
                    netmask:
                      type: integer
                      minimum: -1
                      example: 1
                    scope:
                      type: string
                      oneOf:
                        - type: string
                          pattern: ^\$GLOBAL$
                          example: $GLOBAL
                        - type: string
                          pattern: '^%((?!-)[A-Za-z0-9\-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}$'
                          example: '%domain.com'
                        - type: string
                          format: email
                          example: jane.doe@domain.com
                - type: object
                  properties:
                    lasthit:
                      type: string
                      format: date-time
                    hitcount:
                      type: integer
                      example: 1
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
    delete:
      tags:
        - filter / blwl
      summary: Delete a filter black- and whitelisting
      description: >-
        With this DELETE request you can delete a filter black-/whitelisting
        entry.
      operationId: filter_blwl_listid_delete
      x-mojo-to: 'RestAPI::Filter::BlackWhiteListing#api_delete'
      responses:
        '200':
          description: A success message
          content:
            application/json:
              schema:
                type: object
                title: Success message scheme
                properties:
                  message:
                    type: string
        '500':
          description: An general error response
          content:
            application/json:
              schema:
                type: object
                title: General error scheme
                properties:
                  errorCode:
                    type: integer
                    format: int32
                  errorMessage:
                    type: string
